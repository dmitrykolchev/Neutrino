@{
    ViewData["Title"] = "Home Page";
}
<style>
    :root {
        color-scheme: dark;
        --font-size: 13px;
    }
</style>
<div class="page-content">
    <h1 class="neu-display">Welcome</h1>
    <neu-button name="button1" type="button">
        <sp-icon-article slot="start"></sp-icon-article>
        <span>Здравствуй, Мир!</span>
    </neu-button>

    <neu-component name="Alexey">Hello World!</neu-component>

    <script type="module">

        class NeuComponent extends HTMLElement {
            static observedAttributes = ["name"];

            static _style = `
            span { border: 1px solid green; padding: 8px; font-size: var(--font-size); }`;
            static _styleSheet;

            _name;
            _shadowRoot;

            constructor() {
                super();
                this._name = null;
                if (!NeuComponent._styleSheet) {
                    NeuComponent._styleSheet = new CSSStyleSheet();
                    NeuComponent._styleSheet.replaceSync(NeuComponent._style);
                }
                this._shadowRoot = this.attachShadow({ mode: "open" });
                //this._shadowRoot.adoptedStyleSheets = [NeuComponent._styleSheet];
            }

            get name() {
                return this._name;
            }
            set name(value) {
                this.setAttribute("name", value);
            }

            attributeChangedCallback(name, oldValue, newValue) {
                this._name = newValue;
                this.render();
            }

            render() {
                const children = [];
                const style = document.createElement("style");
                style.textContent = NeuComponent._style;
                children.push(style);
                const parser = new DOMParser();
                const doc = parser.parseFromString(`<span>Hello, ${this.name}!</span>`, "text/html");
                children.push(...doc.body.children);
                this.shadowRoot.replaceChildren(...children);
                //this.style.setProperty("--font-size", "22px");
            }

            connectedCallback() {
                this.render();
            }

            disconnectedCallback() {

            }
        }
        customElements.define("neu-component", NeuComponent);

    </script>

    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    <simple-greeting name="Dmitry"></simple-greeting>
</div>
