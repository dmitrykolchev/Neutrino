<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - LitSample</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/highlight/styles/vs2015.css">
    <link rel="stylesheet" href="~/icons/icons.css" />
    <script src="~/highlight/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
    <script type="module" src="~/js/bundle.debug.js" asp-append-version="true"></script>
    <style>
        :root {
            --sidebar-width: 320px;
        }

        .header-main {
            top: 0;
            background-color: var(--color-neutral-50);
            border-bottom: 1px solid var(--color-neutral-200);
            position: fixed;
            height: 48px;
            left: 0;
            right: 0;
        }

        .left-menu {
            position: fixed;
            top: 48px;
            background-color: var(--color-neutral-100);
            left: 0;
            width: var(--sidebar-width);
            color: white;
            bottom: 28px;
            border-right: 1px solid var(--color-neutral-200);
        }

        .status {
            position: fixed;
            height: 28px;
            bottom: 0;
            left: 0;
            right: 0;
            border-top: 1px solid var(--color-neutral-200);
            background-color: var(--color-neutral-50);
        }

        .application-area {
            position: fixed;
            left: var(--sidebar-width);
            right: 0;
            top: 48px;
            bottom: 28px;
            background-color: var(--color-neutral-200);
            overflow: auto;
        }
    </style>
</head>
@functions {
    string GetSelected(string action, string controller)
    {
        var routeValues = this.Context.Request.RouteValues;
        return string.Equals((string?)routeValues["action"], action, StringComparison.InvariantCultureIgnoreCase) &&
               string.Equals((string?)routeValues["controller"], controller, StringComparison.InvariantCultureIgnoreCase)
                   ? "selected"
                   : "";
    }
}
<body>
    <header class="header-main" aria-label="Header"></header>
    <nav class="left-menu">
        <neu-sidebar style="width:100%;">
            <neu-sidebar-header>
                <span>General Info</span>
                <neu-sidebar-item value="welcome"
                                  @GetSelected("Index", "Home")
                                  href="@Url.Action("Index", "Home")">
                    <span>Welcome</span>
                    <neu-material-icon glyph="AwardStar" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
                <neu-sidebar-item value="quickStart">
                    <span>Quick Start</span>
                    <neu-material-icon glyph="ArticleShortcut" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
                <neu-sidebar-item value="colors"
                                  @GetSelected("Colors", "Home")
                                  href="@Url.Action("Colors", "Home")">
                    <span>Colors</span>
                    <neu-material-icon glyph="Colors" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
            </neu-sidebar-header>
            <neu-sidebar-header>
                <span>Components</span>
                <neu-sidebar-item value="buttons">
                    <span>Buttons</span>
                    <neu-material-icon glyph="ButtonsAlt" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
                <neu-sidebar-item value="sidebar"
                                  @GetSelected("Sidebar", "Home")
                                  href="@Url.Action("Sidebar", "Home")">
                    <span>Sidebar</span>
                    <neu-material-icon glyph="SideNavigation" size="s" slot="start"></neu-material-icon>
                    <neu-material-icon glyph="SideNavigation" size="s" slot="end"></neu-material-icon>
                </neu-sidebar-item>
            </neu-sidebar-header>
            <neu-sidebar-header>
                <span>Icons</span>
                <neu-sidebar-item value="materialIcons"
                                  @GetSelected("MaterialIcons", "Home")
                                  href=@Url.Action("MaterialIcons", "Home")>
                    <span>Material Icons</span>
                    <neu-material-icon glyph="Image" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
                <neu-sidebar-item value="fluentIcons"
                                  @GetSelected("FluentIcons", "Home")
                                  href=@Url.Action("FluentIcons", "Home")>
                    <span>Fluent UI Icons</span>
                    <neu-material-icon glyph="Image" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
                <neu-sidebar-item value="fabricIcons"
                                  @GetSelected("FabricIcons", "Home")
                                  href=@Url.Action("FabricIcons", "Home")>
                    <span>Fabric Icons</span>
                    <neu-material-icon glyph="Image" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
            </neu-sidebar-header>
            <neu-sidebar-header>
                <span>Architecture</span>
                <neu-sidebar-item value="materialIcons"
                                  @GetSelected("Solid", "Architecture")
                                  href=@Url.Action("Solid", "Architecture")>
                    <span>SOLID</span>
                    <neu-material-icon glyph="Image" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
                <neu-sidebar-item value="arch:components"
                                  @GetSelected("Components", "Architecture")
                                  href=@Url.Action("Components", "Architecture")>
                    <span>Components</span>
                    <neu-material-icon glyph="Image" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
            </neu-sidebar-header>
            <neu-sidebar-header>
                <span>CSS Tricks</span>
                <neu-sidebar-item value="spinningBorder"
                                  @GetSelected("SpinningBorder", "Tricks")
                                  href=@Url.Action("SpinningBorder", "Tricks")>
                    <span>Spinning Border</span>
                    <neu-material-icon glyph="BorderOuter" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
                <neu-sidebar-item value="CSSGridLayoutBasics"
                                  href=@Url.Action("GridLayout", "Home")
                                  @GetSelected("GridLayout", "Home")>
                    <span>Grid Layout</span>
                    <neu-material-icon glyph="ButtonsAlt" size="s" slot="start"></neu-material-icon>
                </neu-sidebar-item>
            </neu-sidebar-header>
        </neu-sidebar>
    </nav>
    <main class="application-area" role="main">
        @RenderBody()
    </main>
    <nav class="status"></nav>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
