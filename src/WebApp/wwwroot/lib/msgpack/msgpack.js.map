{"version":3,"file":"msgpack.js","sources":["../../src/utils/utf8.ts","../../src/ExtData.ts","../../src/DecodeError.ts","../../src/utils/int.ts","../../src/timestamp.ts","../../src/ExtensionCodec.ts","../../src/utils/typedArrays.ts","../../src/Encoder.ts","../../src/encode.ts","../../src/utils/prettyByte.ts","../../src/CachedKeyDecoder.ts","../../src/Decoder.ts","../../src/decode.ts","../../src/utils/stream.ts","../../src/decodeAsync.ts"],"sourcesContent":["export function utf8Count(str: string): number {\r\n  const strLength = str.length;\r\n\r\n  let byteLength = 0;\r\n  let pos = 0;\r\n  while (pos < strLength) {\r\n    let value = str.charCodeAt(pos++);\r\n\r\n    if ((value & 0xffffff80) === 0) {\r\n      // 1-byte\r\n      byteLength++;\r\n      continue;\r\n    } else if ((value & 0xfffff800) === 0) {\r\n      // 2-bytes\r\n      byteLength += 2;\r\n    } else {\r\n      // handle surrogate pair\r\n      if (value >= 0xd800 && value <= 0xdbff) {\r\n        // high surrogate\r\n        if (pos < strLength) {\r\n          const extra = str.charCodeAt(pos);\r\n          if ((extra & 0xfc00) === 0xdc00) {\r\n            ++pos;\r\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\r\n          }\r\n        }\r\n      }\r\n\r\n      if ((value & 0xffff0000) === 0) {\r\n        // 3-byte\r\n        byteLength += 3;\r\n      } else {\r\n        // 4-byte\r\n        byteLength += 4;\r\n      }\r\n    }\r\n  }\r\n  return byteLength;\r\n}\r\n\r\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\r\n  const strLength = str.length;\r\n  let offset = outputOffset;\r\n  let pos = 0;\r\n  while (pos < strLength) {\r\n    let value = str.charCodeAt(pos++);\r\n\r\n    if ((value & 0xffffff80) === 0) {\r\n      // 1-byte\r\n      output[offset++] = value;\r\n      continue;\r\n    } else if ((value & 0xfffff800) === 0) {\r\n      // 2-bytes\r\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\r\n    } else {\r\n      // handle surrogate pair\r\n      if (value >= 0xd800 && value <= 0xdbff) {\r\n        // high surrogate\r\n        if (pos < strLength) {\r\n          const extra = str.charCodeAt(pos);\r\n          if ((extra & 0xfc00) === 0xdc00) {\r\n            ++pos;\r\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\r\n          }\r\n        }\r\n      }\r\n\r\n      if ((value & 0xffff0000) === 0) {\r\n        // 3-byte\r\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\r\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\r\n      } else {\r\n        // 4-byte\r\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\r\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\r\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\r\n      }\r\n    }\r\n\r\n    output[offset++] = (value & 0x3f) | 0x80;\r\n  }\r\n}\r\n\r\n// TextEncoder and TextDecoder are standardized in whatwg encoding:\r\n// https://encoding.spec.whatwg.org/\r\n// and available in all the modern browsers:\r\n// https://caniuse.com/textencoder\r\n// They are available in Node.js since v12 LTS as well:\r\n// https://nodejs.org/api/globals.html#textencoder\r\n\r\nconst sharedTextEncoder = new TextEncoder();\r\n\r\n// This threshold should be determined by benchmarking, which might vary in engines and input data.\r\n// Run `npx ts-node benchmark/encode-string.ts` for details.\r\nconst TEXT_ENCODER_THRESHOLD = 50;\r\n\r\nexport function utf8EncodeTE(str: string, output: Uint8Array, outputOffset: number): void {\r\n  sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\r\n}\r\n\r\nexport function utf8Encode(str: string, output: Uint8Array, outputOffset: number): void {\r\n  if (str.length > TEXT_ENCODER_THRESHOLD) {\r\n    utf8EncodeTE(str, output, outputOffset);\r\n  } else {\r\n    utf8EncodeJs(str, output, outputOffset);\r\n  }\r\n}\r\n\r\nconst CHUNK_SIZE = 0x1_000;\r\n\r\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\r\n  let offset = inputOffset;\r\n  const end = offset + byteLength;\r\n\r\n  const units: Array<number> = [];\r\n  let result = \"\";\r\n  while (offset < end) {\r\n    const byte1 = bytes[offset++]!;\r\n    if ((byte1 & 0x80) === 0) {\r\n      // 1 byte\r\n      units.push(byte1);\r\n    } else if ((byte1 & 0xe0) === 0xc0) {\r\n      // 2 bytes\r\n      const byte2 = bytes[offset++]! & 0x3f;\r\n      units.push(((byte1 & 0x1f) << 6) | byte2);\r\n    } else if ((byte1 & 0xf0) === 0xe0) {\r\n      // 3 bytes\r\n      const byte2 = bytes[offset++]! & 0x3f;\r\n      const byte3 = bytes[offset++]! & 0x3f;\r\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\r\n    } else if ((byte1 & 0xf8) === 0xf0) {\r\n      // 4 bytes\r\n      const byte2 = bytes[offset++]! & 0x3f;\r\n      const byte3 = bytes[offset++]! & 0x3f;\r\n      const byte4 = bytes[offset++]! & 0x3f;\r\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\r\n      if (unit > 0xffff) {\r\n        unit -= 0x10000;\r\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\r\n        unit = 0xdc00 | (unit & 0x3ff);\r\n      }\r\n      units.push(unit);\r\n    } else {\r\n      units.push(byte1);\r\n    }\r\n\r\n    if (units.length >= CHUNK_SIZE) {\r\n      result += String.fromCharCode(...units);\r\n      units.length = 0;\r\n    }\r\n  }\r\n\r\n  if (units.length > 0) {\r\n    result += String.fromCharCode(...units);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst sharedTextDecoder = new TextDecoder();\r\n\r\n// This threshold should be determined by benchmarking, which might vary in engines and input data.\r\n// Run `npx ts-node benchmark/decode-string.ts` for details.\r\nconst TEXT_DECODER_THRESHOLD = 200;\r\n\r\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\r\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\r\n  return sharedTextDecoder.decode(stringBytes);\r\n}\r\n\r\nexport function utf8Decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\r\n  if (byteLength > TEXT_DECODER_THRESHOLD) {\r\n    return utf8DecodeTD(bytes, inputOffset, byteLength);\r\n  } else {\r\n    return utf8DecodeJs(bytes, inputOffset, byteLength);\r\n  }\r\n}\r\n","/**\r\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\r\n */\r\nexport class ExtData {\r\n  constructor(\r\n    readonly type: number,\r\n    readonly data: Uint8Array,\r\n  ) {}\r\n}\r\n","export class DecodeError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n\r\n    // fix the prototype chain in a cross-platform way\r\n    const proto: typeof DecodeError.prototype = Object.create(DecodeError.prototype);\r\n    Object.setPrototypeOf(this, proto);\r\n\r\n    Object.defineProperty(this, \"name\", {\r\n      configurable: true,\r\n      enumerable: false,\r\n      value: DecodeError.name,\r\n    });\r\n  }\r\n}\r\n","// Integer Utility\r\n\r\nexport const UINT32_MAX = 0xffff_ffff;\r\n\r\n// DataView extension to handle int64 / uint64,\r\n// where the actual range is 53-bits integer (a.k.a. safe integer)\r\n\r\nexport function setUint64(view: DataView, offset: number, value: number): void {\r\n  const high = value / 0x1_0000_0000;\r\n  const low = value; // high bits are truncated by DataView\r\n  view.setUint32(offset, high);\r\n  view.setUint32(offset + 4, low);\r\n}\r\n\r\nexport function setInt64(view: DataView, offset: number, value: number): void {\r\n  const high = Math.floor(value / 0x1_0000_0000);\r\n  const low = value; // high bits are truncated by DataView\r\n  view.setUint32(offset, high);\r\n  view.setUint32(offset + 4, low);\r\n}\r\n\r\nexport function getInt64(view: DataView, offset: number): number {\r\n  const high = view.getInt32(offset);\r\n  const low = view.getUint32(offset + 4);\r\n  return high * 0x1_0000_0000 + low;\r\n}\r\n\r\nexport function getUint64(view: DataView, offset: number): number {\r\n  const high = view.getUint32(offset);\r\n  const low = view.getUint32(offset + 4);\r\n  return high * 0x1_0000_0000 + low;\r\n}\r\n","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\r\nimport { DecodeError } from \"./DecodeError\";\r\nimport { getInt64, setInt64 } from \"./utils/int\";\r\n\r\nexport const EXT_TIMESTAMP = -1;\r\n\r\nexport type TimeSpec = {\r\n  sec: number;\r\n  nsec: number;\r\n};\r\n\r\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\r\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\r\n\r\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\r\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\r\n    // Here sec >= 0 && nsec >= 0\r\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\r\n      // timestamp 32 = { sec32 (unsigned) }\r\n      const rv = new Uint8Array(4);\r\n      const view = new DataView(rv.buffer);\r\n      view.setUint32(0, sec);\r\n      return rv;\r\n    } else {\r\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\r\n      const secHigh = sec / 0x100000000;\r\n      const secLow = sec & 0xffffffff;\r\n      const rv = new Uint8Array(8);\r\n      const view = new DataView(rv.buffer);\r\n      // nsec30 | secHigh2\r\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\r\n      // secLow32\r\n      view.setUint32(4, secLow);\r\n      return rv;\r\n    }\r\n  } else {\r\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\r\n    const rv = new Uint8Array(12);\r\n    const view = new DataView(rv.buffer);\r\n    view.setUint32(0, nsec);\r\n    setInt64(view, 4, sec);\r\n    return rv;\r\n  }\r\n}\r\n\r\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\r\n  const msec = date.getTime();\r\n  const sec = Math.floor(msec / 1e3);\r\n  const nsec = (msec - sec * 1e3) * 1e6;\r\n\r\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\r\n  const nsecInSec = Math.floor(nsec / 1e9);\r\n  return {\r\n    sec: sec + nsecInSec,\r\n    nsec: nsec - nsecInSec * 1e9,\r\n  };\r\n}\r\n\r\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\r\n  if (object instanceof Date) {\r\n    const timeSpec = encodeDateToTimeSpec(object);\r\n    return encodeTimeSpecToTimestamp(timeSpec);\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\r\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n\r\n  // data may be 32, 64, or 96 bits\r\n  switch (data.byteLength) {\r\n    case 4: {\r\n      // timestamp 32 = { sec32 }\r\n      const sec = view.getUint32(0);\r\n      const nsec = 0;\r\n      return { sec, nsec };\r\n    }\r\n    case 8: {\r\n      // timestamp 64 = { nsec30, sec34 }\r\n      const nsec30AndSecHigh2 = view.getUint32(0);\r\n      const secLow32 = view.getUint32(4);\r\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\r\n      const nsec = nsec30AndSecHigh2 >>> 2;\r\n      return { sec, nsec };\r\n    }\r\n    case 12: {\r\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\r\n\r\n      const sec = getInt64(view, 4);\r\n      const nsec = view.getUint32(0);\r\n      return { sec, nsec };\r\n    }\r\n    default:\r\n      throw new DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);\r\n  }\r\n}\r\n\r\nexport function decodeTimestampExtension(data: Uint8Array): Date {\r\n  const timeSpec = decodeTimestampToTimeSpec(data);\r\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\r\n}\r\n\r\nexport const timestampExtension = {\r\n  type: EXT_TIMESTAMP,\r\n  encode: encodeTimestampExtension,\r\n  decode: decodeTimestampExtension,\r\n};\r\n","// ExtensionCodec to handle MessagePack extensions\r\n\r\nimport { ExtData } from \"./ExtData\";\r\nimport { timestampExtension } from \"./timestamp\";\r\n\r\nexport type ExtensionDecoderType<ContextType> = (\r\n  data: Uint8Array,\r\n  extensionType: number,\r\n  context: ContextType,\r\n) => unknown;\r\n\r\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\r\n\r\n// immutable interface to ExtensionCodec\r\nexport type ExtensionCodecType<ContextType> = {\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  __brand?: ContextType;\r\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\r\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\r\n};\r\n\r\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\r\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\r\n\r\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\r\n  // this will make type errors a lot more clear\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  __brand?: ContextType;\r\n\r\n  // built-in extensions\r\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\r\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\r\n\r\n  // custom extensions\r\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\r\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\r\n\r\n  public constructor() {\r\n    this.register(timestampExtension);\r\n  }\r\n\r\n  public register({\r\n    type,\r\n    encode,\r\n    decode,\r\n  }: {\r\n    type: number;\r\n    encode: ExtensionEncoderType<ContextType>;\r\n    decode: ExtensionDecoderType<ContextType>;\r\n  }): void {\r\n    if (type >= 0) {\r\n      // custom extensions\r\n      this.encoders[type] = encode;\r\n      this.decoders[type] = decode;\r\n    } else {\r\n      // built-in extensions\r\n      const index = 1 + type;\r\n      this.builtInEncoders[index] = encode;\r\n      this.builtInDecoders[index] = decode;\r\n    }\r\n  }\r\n\r\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\r\n    // built-in extensions\r\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\r\n      const encodeExt = this.builtInEncoders[i];\r\n      if (encodeExt != null) {\r\n        const data = encodeExt(object, context);\r\n        if (data != null) {\r\n          const type = -1 - i;\r\n          return new ExtData(type, data);\r\n        }\r\n      }\r\n    }\r\n\r\n    // custom extensions\r\n    for (let i = 0; i < this.encoders.length; i++) {\r\n      const encodeExt = this.encoders[i];\r\n      if (encodeExt != null) {\r\n        const data = encodeExt(object, context);\r\n        if (data != null) {\r\n          const type = i;\r\n          return new ExtData(type, data);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (object instanceof ExtData) {\r\n      // to keep ExtData as is\r\n      return object;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\r\n    const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\r\n    if (decodeExt) {\r\n      return decodeExt(data, type, context);\r\n    } else {\r\n      // decode() does not fail, returns ExtData instead.\r\n      return new ExtData(type, data);\r\n    }\r\n  }\r\n}\r\n","export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer): Uint8Array {\r\n  if (buffer instanceof Uint8Array) {\r\n    return buffer;\r\n  } else if (ArrayBuffer.isView(buffer)) {\r\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\r\n  } else if (buffer instanceof ArrayBuffer) {\r\n    return new Uint8Array(buffer);\r\n  } else {\r\n    // ArrayLike<number>\r\n    return Uint8Array.from(buffer);\r\n  }\r\n}\r\n\r\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\r\n  if (buffer instanceof ArrayBuffer) {\r\n    return new DataView(buffer);\r\n  }\r\n\r\n  const bufferView = ensureUint8Array(buffer);\r\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\r\n}\r\n","import { utf8Count, utf8Encode } from \"./utils/utf8\";\r\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\r\nimport { setInt64, setUint64 } from \"./utils/int\";\r\nimport { ensureUint8Array } from \"./utils/typedArrays\";\r\nimport type { ExtData } from \"./ExtData\";\r\nimport type { ContextOf } from \"./context\";\r\n\r\nexport const DEFAULT_MAX_DEPTH = 100;\r\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\r\n\r\nexport type EncoderOptions<ContextType = undefined> = Partial<\r\n  Readonly<{\r\n    extensionCodec: ExtensionCodecType<ContextType>;\r\n\r\n    /**\r\n     * Encodes bigint as Int64 or Uint64 if it's set to true.\r\n     * {@link forceIntegerToFloat} does not affect bigint.\r\n     * Depends on ES2020's {@link DataView#setBigInt64} and\r\n     * {@link DataView#setBigUint64}.\r\n     *\r\n     * Defaults to false.\r\n     */\r\n    useBigInt64: boolean;\r\n\r\n    /**\r\n     * The maximum depth in nested objects and arrays.\r\n     *\r\n     * Defaults to 100.\r\n     */\r\n    maxDepth: number;\r\n\r\n    /**\r\n     * The initial size of the internal buffer.\r\n     *\r\n     * Defaults to 2048.\r\n     */\r\n    initialBufferSize: number;\r\n\r\n    /**\r\n     * If `true`, the keys of an object is sorted. In other words, the encoded\r\n     * binary is canonical and thus comparable to another encoded binary.\r\n     *\r\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\r\n     */\r\n    sortKeys: boolean;\r\n    /**\r\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\r\n     *\r\n     * Only use it if precisions don't matter.\r\n     *\r\n     * Defaults to `false`.\r\n     */\r\n    forceFloat32: boolean;\r\n\r\n    /**\r\n     * If `true`, an object property with `undefined` value are ignored.\r\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\r\n     *\r\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\r\n     */\r\n    ignoreUndefined: boolean;\r\n\r\n    /**\r\n     * If `true`, integer numbers are encoded as floating point numbers,\r\n     * with the `forceFloat32` option taken into account.\r\n     *\r\n     * Defaults to `false`.\r\n     */\r\n    forceIntegerToFloat: boolean;\r\n  }>\r\n> &\r\n  ContextOf<ContextType>;\r\n\r\nexport class Encoder<ContextType = undefined> {\r\n  private readonly extensionCodec: ExtensionCodecType<ContextType>;\r\n  private readonly context: ContextType;\r\n  private readonly useBigInt64: boolean;\r\n  private readonly maxDepth: number;\r\n  private readonly initialBufferSize: number;\r\n  private readonly sortKeys: boolean;\r\n  private readonly forceFloat32: boolean;\r\n  private readonly ignoreUndefined: boolean;\r\n  private readonly forceIntegerToFloat: boolean;\r\n\r\n  private pos: number;\r\n  private view: DataView;\r\n  private bytes: Uint8Array;\r\n\r\n  public constructor(options?: EncoderOptions<ContextType>) {\r\n    this.extensionCodec = options?.extensionCodec ?? (ExtensionCodec.defaultCodec as ExtensionCodecType<ContextType>);\r\n    this.context = (options as { context: ContextType } | undefined)?.context as ContextType; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined\r\n\r\n    this.useBigInt64 = options?.useBigInt64 ?? false;\r\n    this.maxDepth = options?.maxDepth ?? DEFAULT_MAX_DEPTH;\r\n    this.initialBufferSize = options?.initialBufferSize ?? DEFAULT_INITIAL_BUFFER_SIZE;\r\n    this.sortKeys = options?.sortKeys ?? false;\r\n    this.forceFloat32 = options?.forceFloat32 ?? false;\r\n    this.ignoreUndefined = options?.ignoreUndefined ?? false;\r\n    this.forceIntegerToFloat = options?.forceIntegerToFloat ?? false;\r\n\r\n    this.pos = 0;\r\n    this.view = new DataView(new ArrayBuffer(this.initialBufferSize));\r\n    this.bytes = new Uint8Array(this.view.buffer);\r\n  }\r\n\r\n  private reinitializeState() {\r\n    this.pos = 0;\r\n  }\r\n\r\n  /**\r\n   * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\r\n   *\r\n   * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\r\n   */\r\n  public encodeSharedRef(object: unknown): Uint8Array {\r\n    this.reinitializeState();\r\n    this.doEncode(object, 1);\r\n    return this.bytes.subarray(0, this.pos);\r\n  }\r\n\r\n  /**\r\n   * @returns Encodes the object and returns a copy of the encoder's internal buffer.\r\n   */\r\n  public encode(object: unknown): Uint8Array {\r\n    this.reinitializeState();\r\n    this.doEncode(object, 1);\r\n    return this.bytes.slice(0, this.pos);\r\n  }\r\n\r\n  private doEncode(object: unknown, depth: number): void {\r\n    if (depth > this.maxDepth) {\r\n      throw new Error(`Too deep objects in depth ${depth}`);\r\n    }\r\n\r\n    if (object == null) {\r\n      this.encodeNil();\r\n    } else if (typeof object === \"boolean\") {\r\n      this.encodeBoolean(object);\r\n    } else if (typeof object === \"number\") {\r\n      if (!this.forceIntegerToFloat) {\r\n        this.encodeNumber(object);\r\n      } else {\r\n        this.encodeNumberAsFloat(object);\r\n      }\r\n    } else if (typeof object === \"string\") {\r\n      this.encodeString(object);\r\n    } else if (this.useBigInt64 && typeof object === \"bigint\") {\r\n      this.encodeBigInt64(object);\r\n    } else {\r\n      this.encodeObject(object, depth);\r\n    }\r\n  }\r\n\r\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\r\n    const requiredSize = this.pos + sizeToWrite;\r\n\r\n    if (this.view.byteLength < requiredSize) {\r\n      this.resizeBuffer(requiredSize * 2);\r\n    }\r\n  }\r\n\r\n  private resizeBuffer(newSize: number) {\r\n    const newBuffer = new ArrayBuffer(newSize);\r\n    const newBytes = new Uint8Array(newBuffer);\r\n    const newView = new DataView(newBuffer);\r\n\r\n    newBytes.set(this.bytes);\r\n\r\n    this.view = newView;\r\n    this.bytes = newBytes;\r\n  }\r\n\r\n  private encodeNil() {\r\n    this.writeU8(0xc0);\r\n  }\r\n\r\n  private encodeBoolean(object: boolean) {\r\n    if (object === false) {\r\n      this.writeU8(0xc2);\r\n    } else {\r\n      this.writeU8(0xc3);\r\n    }\r\n  }\r\n\r\n  private encodeNumber(object: number): void {\r\n    if (!this.forceIntegerToFloat && Number.isSafeInteger(object)) {\r\n      if (object >= 0) {\r\n        if (object < 0x80) {\r\n          // positive fixint\r\n          this.writeU8(object);\r\n        } else if (object < 0x100) {\r\n          // uint 8\r\n          this.writeU8(0xcc);\r\n          this.writeU8(object);\r\n        } else if (object < 0x10000) {\r\n          // uint 16\r\n          this.writeU8(0xcd);\r\n          this.writeU16(object);\r\n        } else if (object < 0x100000000) {\r\n          // uint 32\r\n          this.writeU8(0xce);\r\n          this.writeU32(object);\r\n        } else if (!this.useBigInt64) {\r\n          // uint 64\r\n          this.writeU8(0xcf);\r\n          this.writeU64(object);\r\n        } else {\r\n          this.encodeNumberAsFloat(object);\r\n        }\r\n      } else {\r\n        if (object >= -0x20) {\r\n          // negative fixint\r\n          this.writeU8(0xe0 | (object + 0x20));\r\n        } else if (object >= -0x80) {\r\n          // int 8\r\n          this.writeU8(0xd0);\r\n          this.writeI8(object);\r\n        } else if (object >= -0x8000) {\r\n          // int 16\r\n          this.writeU8(0xd1);\r\n          this.writeI16(object);\r\n        } else if (object >= -0x80000000) {\r\n          // int 32\r\n          this.writeU8(0xd2);\r\n          this.writeI32(object);\r\n        } else if (!this.useBigInt64) {\r\n          // int 64\r\n          this.writeU8(0xd3);\r\n          this.writeI64(object);\r\n        } else {\r\n          this.encodeNumberAsFloat(object);\r\n        }\r\n      }\r\n    } else {\r\n      this.encodeNumberAsFloat(object);\r\n    }\r\n  }\r\n\r\n  private encodeNumberAsFloat(object: number): void {\r\n    if (this.forceFloat32) {\r\n      // float 32\r\n      this.writeU8(0xca);\r\n      this.writeF32(object);\r\n    } else {\r\n      // float 64\r\n      this.writeU8(0xcb);\r\n      this.writeF64(object);\r\n    }\r\n  }\r\n\r\n  private encodeBigInt64(object: bigint): void {\r\n    if (object >= BigInt(0)) {\r\n      // uint 64\r\n      this.writeU8(0xcf);\r\n      this.writeBigUint64(object);\r\n    } else {\r\n      // int 64\r\n      this.writeU8(0xd3);\r\n      this.writeBigInt64(object);\r\n    }\r\n  }\r\n\r\n  private writeStringHeader(byteLength: number) {\r\n    if (byteLength < 32) {\r\n      // fixstr\r\n      this.writeU8(0xa0 + byteLength);\r\n    } else if (byteLength < 0x100) {\r\n      // str 8\r\n      this.writeU8(0xd9);\r\n      this.writeU8(byteLength);\r\n    } else if (byteLength < 0x10000) {\r\n      // str 16\r\n      this.writeU8(0xda);\r\n      this.writeU16(byteLength);\r\n    } else if (byteLength < 0x100000000) {\r\n      // str 32\r\n      this.writeU8(0xdb);\r\n      this.writeU32(byteLength);\r\n    } else {\r\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\r\n    }\r\n  }\r\n\r\n  private encodeString(object: string) {\r\n    const maxHeaderSize = 1 + 4;\r\n\r\n    const byteLength = utf8Count(object);\r\n    this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\r\n    this.writeStringHeader(byteLength);\r\n    utf8Encode(object, this.bytes, this.pos);\r\n    this.pos += byteLength;\r\n  }\r\n\r\n  private encodeObject(object: unknown, depth: number) {\r\n    // try to encode objects with custom codec first of non-primitives\r\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\r\n    if (ext != null) {\r\n      this.encodeExtension(ext);\r\n    } else if (Array.isArray(object)) {\r\n      this.encodeArray(object, depth);\r\n    } else if (ArrayBuffer.isView(object)) {\r\n      this.encodeBinary(object);\r\n    } else if (typeof object === \"object\") {\r\n      this.encodeMap(object as Record<string, unknown>, depth);\r\n    } else {\r\n      // symbol, function and other special object come here unless extensionCodec handles them.\r\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\r\n    }\r\n  }\r\n\r\n  private encodeBinary(object: ArrayBufferView) {\r\n    const size = object.byteLength;\r\n    if (size < 0x100) {\r\n      // bin 8\r\n      this.writeU8(0xc4);\r\n      this.writeU8(size);\r\n    } else if (size < 0x10000) {\r\n      // bin 16\r\n      this.writeU8(0xc5);\r\n      this.writeU16(size);\r\n    } else if (size < 0x100000000) {\r\n      // bin 32\r\n      this.writeU8(0xc6);\r\n      this.writeU32(size);\r\n    } else {\r\n      throw new Error(`Too large binary: ${size}`);\r\n    }\r\n    const bytes = ensureUint8Array(object);\r\n    this.writeU8a(bytes);\r\n  }\r\n\r\n  private encodeArray(object: Array<unknown>, depth: number) {\r\n    const size = object.length;\r\n    if (size < 16) {\r\n      // fixarray\r\n      this.writeU8(0x90 + size);\r\n    } else if (size < 0x10000) {\r\n      // array 16\r\n      this.writeU8(0xdc);\r\n      this.writeU16(size);\r\n    } else if (size < 0x100000000) {\r\n      // array 32\r\n      this.writeU8(0xdd);\r\n      this.writeU32(size);\r\n    } else {\r\n      throw new Error(`Too large array: ${size}`);\r\n    }\r\n    for (const item of object) {\r\n      this.doEncode(item, depth + 1);\r\n    }\r\n  }\r\n\r\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\r\n    let count = 0;\r\n\r\n    for (const key of keys) {\r\n      if (object[key] !== undefined) {\r\n        count++;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  private encodeMap(object: Record<string, unknown>, depth: number) {\r\n    const keys = Object.keys(object);\r\n    if (this.sortKeys) {\r\n      keys.sort();\r\n    }\r\n\r\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\r\n\r\n    if (size < 16) {\r\n      // fixmap\r\n      this.writeU8(0x80 + size);\r\n    } else if (size < 0x10000) {\r\n      // map 16\r\n      this.writeU8(0xde);\r\n      this.writeU16(size);\r\n    } else if (size < 0x100000000) {\r\n      // map 32\r\n      this.writeU8(0xdf);\r\n      this.writeU32(size);\r\n    } else {\r\n      throw new Error(`Too large map object: ${size}`);\r\n    }\r\n\r\n    for (const key of keys) {\r\n      const value = object[key];\r\n\r\n      if (!(this.ignoreUndefined && value === undefined)) {\r\n        this.encodeString(key);\r\n        this.doEncode(value, depth + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  private encodeExtension(ext: ExtData) {\r\n    const size = ext.data.length;\r\n    if (size === 1) {\r\n      // fixext 1\r\n      this.writeU8(0xd4);\r\n    } else if (size === 2) {\r\n      // fixext 2\r\n      this.writeU8(0xd5);\r\n    } else if (size === 4) {\r\n      // fixext 4\r\n      this.writeU8(0xd6);\r\n    } else if (size === 8) {\r\n      // fixext 8\r\n      this.writeU8(0xd7);\r\n    } else if (size === 16) {\r\n      // fixext 16\r\n      this.writeU8(0xd8);\r\n    } else if (size < 0x100) {\r\n      // ext 8\r\n      this.writeU8(0xc7);\r\n      this.writeU8(size);\r\n    } else if (size < 0x10000) {\r\n      // ext 16\r\n      this.writeU8(0xc8);\r\n      this.writeU16(size);\r\n    } else if (size < 0x100000000) {\r\n      // ext 32\r\n      this.writeU8(0xc9);\r\n      this.writeU32(size);\r\n    } else {\r\n      throw new Error(`Too large extension object: ${size}`);\r\n    }\r\n    this.writeI8(ext.type);\r\n    this.writeU8a(ext.data);\r\n  }\r\n\r\n  private writeU8(value: number) {\r\n    this.ensureBufferSizeToWrite(1);\r\n\r\n    this.view.setUint8(this.pos, value);\r\n    this.pos++;\r\n  }\r\n\r\n  private writeU8a(values: ArrayLike<number>) {\r\n    const size = values.length;\r\n    this.ensureBufferSizeToWrite(size);\r\n\r\n    this.bytes.set(values, this.pos);\r\n    this.pos += size;\r\n  }\r\n\r\n  private writeI8(value: number) {\r\n    this.ensureBufferSizeToWrite(1);\r\n\r\n    this.view.setInt8(this.pos, value);\r\n    this.pos++;\r\n  }\r\n\r\n  private writeU16(value: number) {\r\n    this.ensureBufferSizeToWrite(2);\r\n\r\n    this.view.setUint16(this.pos, value);\r\n    this.pos += 2;\r\n  }\r\n\r\n  private writeI16(value: number) {\r\n    this.ensureBufferSizeToWrite(2);\r\n\r\n    this.view.setInt16(this.pos, value);\r\n    this.pos += 2;\r\n  }\r\n\r\n  private writeU32(value: number) {\r\n    this.ensureBufferSizeToWrite(4);\r\n\r\n    this.view.setUint32(this.pos, value);\r\n    this.pos += 4;\r\n  }\r\n\r\n  private writeI32(value: number) {\r\n    this.ensureBufferSizeToWrite(4);\r\n\r\n    this.view.setInt32(this.pos, value);\r\n    this.pos += 4;\r\n  }\r\n\r\n  private writeF32(value: number) {\r\n    this.ensureBufferSizeToWrite(4);\r\n\r\n    this.view.setFloat32(this.pos, value);\r\n    this.pos += 4;\r\n  }\r\n\r\n  private writeF64(value: number) {\r\n    this.ensureBufferSizeToWrite(8);\r\n\r\n    this.view.setFloat64(this.pos, value);\r\n    this.pos += 8;\r\n  }\r\n\r\n  private writeU64(value: number) {\r\n    this.ensureBufferSizeToWrite(8);\r\n\r\n    setUint64(this.view, this.pos, value);\r\n    this.pos += 8;\r\n  }\r\n\r\n  private writeI64(value: number) {\r\n    this.ensureBufferSizeToWrite(8);\r\n\r\n    setInt64(this.view, this.pos, value);\r\n    this.pos += 8;\r\n  }\r\n\r\n  private writeBigUint64(value: bigint) {\r\n    this.ensureBufferSizeToWrite(8);\r\n\r\n    this.view.setBigUint64(this.pos, value);\r\n    this.pos += 8;\r\n  }\r\n\r\n  private writeBigInt64(value: bigint) {\r\n    this.ensureBufferSizeToWrite(8);\r\n\r\n    this.view.setBigInt64(this.pos, value);\r\n    this.pos += 8;\r\n  }\r\n}\r\n","import { Encoder } from \"./Encoder\";\r\nimport type { EncoderOptions } from \"./Encoder\";\r\nimport type { SplitUndefined } from \"./context\";\r\n\r\n/**\r\n * @deprecated Use {@link EncoderOptions} instead.\r\n */\r\nexport type EncodeOptions = never;\r\n\r\n/**\r\n * @deprecated No longer supported.\r\n */\r\nexport const defaultEncodeOptions: never = undefined as never;\r\n\r\n/**\r\n * It encodes `value` in the MessagePack format and\r\n * returns a byte buffer.\r\n *\r\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\r\n */\r\nexport function encode<ContextType = undefined>(\r\n  value: unknown,\r\n  options?: EncoderOptions<SplitUndefined<ContextType>>,\r\n): Uint8Array {\r\n  const encoder = new Encoder(options);\r\n  return encoder.encodeSharedRef(value);\r\n}\r\n","export function prettyByte(byte: number): string {\r\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\r\n}\r\n","import { utf8DecodeJs } from \"./utils/utf8\";\r\n\r\nconst DEFAULT_MAX_KEY_LENGTH = 16;\r\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\r\n\r\nexport interface KeyDecoder {\r\n  canBeCached(byteLength: number): boolean;\r\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\r\n}\r\ninterface KeyCacheRecord {\r\n  readonly bytes: Uint8Array;\r\n  readonly str: string;\r\n}\r\n\r\nexport class CachedKeyDecoder implements KeyDecoder {\r\n  hit = 0;\r\n  miss = 0;\r\n  private readonly caches: Array<Array<KeyCacheRecord>>;\r\n\r\n  constructor(\r\n    readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH,\r\n    readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY,\r\n  ) {\r\n    // avoid `new Array(N)`, which makes a sparse array,\r\n    // because a sparse array is typically slower than a non-sparse array.\r\n    this.caches = [];\r\n    for (let i = 0; i < this.maxKeyLength; i++) {\r\n      this.caches.push([]);\r\n    }\r\n  }\r\n\r\n  public canBeCached(byteLength: number): boolean {\r\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\r\n  }\r\n\r\n  private find(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\r\n    const records = this.caches[byteLength - 1]!;\r\n\r\n    FIND_CHUNK: for (const record of records) {\r\n      const recordBytes = record.bytes;\r\n\r\n      for (let j = 0; j < byteLength; j++) {\r\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\r\n          continue FIND_CHUNK;\r\n        }\r\n      }\r\n      return record.str;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private store(bytes: Uint8Array, value: string) {\r\n    const records = this.caches[bytes.length - 1]!;\r\n    const record: KeyCacheRecord = { bytes, str: value };\r\n\r\n    if (records.length >= this.maxLengthPerKey) {\r\n      // `records` are full!\r\n      // Set `record` to an arbitrary position.\r\n      records[(Math.random() * records.length) | 0] = record;\r\n    } else {\r\n      records.push(record);\r\n    }\r\n  }\r\n\r\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\r\n    const cachedValue = this.find(bytes, inputOffset, byteLength);\r\n    if (cachedValue != null) {\r\n      this.hit++;\r\n      return cachedValue;\r\n    }\r\n    this.miss++;\r\n\r\n    const str = utf8DecodeJs(bytes, inputOffset, byteLength);\r\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\r\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\r\n    this.store(slicedCopyOfBytes, str);\r\n    return str;\r\n  }\r\n}\r\n","import { prettyByte } from \"./utils/prettyByte\";\r\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\r\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int\";\r\nimport { utf8Decode } from \"./utils/utf8\";\r\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\r\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\r\nimport { DecodeError } from \"./DecodeError\";\r\nimport type { ContextOf } from \"./context\";\r\n\r\nexport type DecoderOptions<ContextType = undefined> = Readonly<\r\n  Partial<{\r\n    extensionCodec: ExtensionCodecType<ContextType>;\r\n\r\n    /**\r\n     * Decodes Int64 and Uint64 as bigint if it's set to true.\r\n     * Depends on ES2020's {@link DataView#getBigInt64} and\r\n     * {@link DataView#getBigUint64}.\r\n     *\r\n     * Defaults to false.\r\n     */\r\n    useBigInt64: boolean;\r\n\r\n    /**\r\n     * Maximum string length.\r\n     *\r\n     * Defaults to 4_294_967_295 (UINT32_MAX).\r\n     */\r\n    maxStrLength: number;\r\n    /**\r\n     * Maximum binary length.\r\n     *\r\n     * Defaults to 4_294_967_295 (UINT32_MAX).\r\n     */\r\n    maxBinLength: number;\r\n    /**\r\n     * Maximum array length.\r\n     *\r\n     * Defaults to 4_294_967_295 (UINT32_MAX).\r\n     */\r\n    maxArrayLength: number;\r\n    /**\r\n     * Maximum map length.\r\n     *\r\n     * Defaults to 4_294_967_295 (UINT32_MAX).\r\n     */\r\n    maxMapLength: number;\r\n    /**\r\n     * Maximum extension length.\r\n     *\r\n     * Defaults to 4_294_967_295 (UINT32_MAX).\r\n     */\r\n    maxExtLength: number;\r\n\r\n    /**\r\n     * An object key decoder. Defaults to the shared instance of {@link CachedKeyDecoder}.\r\n     * `null` is a special value to disable the use of the key decoder at all.\r\n     */\r\n    keyDecoder: KeyDecoder | null;\r\n  }>\r\n> &\r\n  ContextOf<ContextType>;\r\n\r\nconst STATE_ARRAY = \"array\";\r\nconst STATE_MAP_KEY = \"map_key\";\r\nconst STATE_MAP_VALUE = \"map_value\";\r\n\r\ntype MapKeyType = string | number;\r\n\r\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\r\n  return typeof key === \"string\" || typeof key === \"number\";\r\n};\r\n\r\ntype StackMapState = {\r\n  type: typeof STATE_MAP_KEY | typeof STATE_MAP_VALUE;\r\n  size: number;\r\n  key: MapKeyType | null;\r\n  readCount: number;\r\n  map: Record<string, unknown>;\r\n};\r\n\r\ntype StackArrayState = {\r\n  type: typeof STATE_ARRAY;\r\n  size: number;\r\n  array: Array<unknown>;\r\n  position: number;\r\n};\r\n\r\nclass StackPool {\r\n  private readonly stack: Array<StackState> = [];\r\n  private stackHeadPosition = -1;\r\n\r\n  public get length(): number {\r\n    return this.stackHeadPosition + 1;\r\n  }\r\n\r\n  public top(): StackState | undefined {\r\n    return this.stack[this.stackHeadPosition];\r\n  }\r\n\r\n  public pushArrayState(size: number) {\r\n    const state = this.getUninitializedStateFromPool() as StackArrayState;\r\n\r\n    state.type = STATE_ARRAY;\r\n    state.position = 0;\r\n    state.size = size;\r\n    state.array = new Array(size);\r\n  }\r\n\r\n  public pushMapState(size: number) {\r\n    const state = this.getUninitializedStateFromPool() as StackMapState;\r\n\r\n    state.type = STATE_MAP_KEY;\r\n    state.readCount = 0;\r\n    state.size = size;\r\n    state.map = {};\r\n  }\r\n\r\n  private getUninitializedStateFromPool() {\r\n    this.stackHeadPosition++;\r\n\r\n    if (this.stackHeadPosition === this.stack.length) {\r\n      const partialState: Partial<StackState> = {\r\n        type: undefined,\r\n        size: 0,\r\n        array: undefined,\r\n        position: 0,\r\n        readCount: 0,\r\n        map: undefined,\r\n        key: null,\r\n      };\r\n\r\n      this.stack.push(partialState as StackState);\r\n    }\r\n\r\n    return this.stack[this.stackHeadPosition];\r\n  }\r\n\r\n  public release(state: StackState): void {\r\n    const topStackState = this.stack[this.stackHeadPosition];\r\n\r\n    if (topStackState !== state) {\r\n      throw new Error(\"Invalid stack state. Released state is not on top of the stack.\");\r\n    }\r\n\r\n    if (state.type === STATE_ARRAY) {\r\n      const partialState = state as Partial<StackArrayState>;\r\n      partialState.size = 0;\r\n      partialState.array = undefined;\r\n      partialState.position = 0;\r\n      partialState.type = undefined;\r\n    }\r\n\r\n    if (state.type === STATE_MAP_KEY || state.type === STATE_MAP_VALUE) {\r\n      const partialState = state as Partial<StackMapState>;\r\n      partialState.size = 0;\r\n      partialState.map = undefined;\r\n      partialState.readCount = 0;\r\n      partialState.type = undefined;\r\n    }\r\n\r\n    this.stackHeadPosition--;\r\n  }\r\n\r\n  public reset(): void {\r\n    this.stack.length = 0;\r\n    this.stackHeadPosition = -1;\r\n  }\r\n}\r\n\r\ntype StackState = StackArrayState | StackMapState;\r\n\r\nconst HEAD_BYTE_REQUIRED = -1;\r\n\r\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\r\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\r\n\r\ntry {\r\n  // IE11: The spec says it should throw RangeError,\r\n  // IE11: but in IE11 it throws TypeError.\r\n  EMPTY_VIEW.getInt8(0);\r\n} catch (e) {\r\n  if (!(e instanceof RangeError)) {\r\n    throw new Error(\r\n      \"This module is not supported in the current JavaScript engine because DataView does not throw RangeError on out-of-bounds access\",\r\n    );\r\n  }\r\n}\r\nexport const DataViewIndexOutOfBoundsError = RangeError;\r\n\r\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\r\n\r\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\r\n\r\nexport class Decoder<ContextType = undefined> {\r\n  private readonly extensionCodec: ExtensionCodecType<ContextType>;\r\n  private readonly context: ContextType;\r\n  private readonly useBigInt64: boolean;\r\n  private readonly maxStrLength: number;\r\n  private readonly maxBinLength: number;\r\n  private readonly maxArrayLength: number;\r\n  private readonly maxMapLength: number;\r\n  private readonly maxExtLength: number;\r\n  private readonly keyDecoder: KeyDecoder | null;\r\n\r\n  private totalPos = 0;\r\n  private pos = 0;\r\n\r\n  private view = EMPTY_VIEW;\r\n  private bytes = EMPTY_BYTES;\r\n  private headByte = HEAD_BYTE_REQUIRED;\r\n  private readonly stack = new StackPool();\r\n\r\n  public constructor(options?: DecoderOptions<ContextType>) {\r\n    this.extensionCodec = options?.extensionCodec ?? (ExtensionCodec.defaultCodec as ExtensionCodecType<ContextType>);\r\n    this.context = (options as { context: ContextType } | undefined)?.context as ContextType; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined\r\n\r\n    this.useBigInt64 = options?.useBigInt64 ?? false;\r\n    this.maxStrLength = options?.maxStrLength ?? UINT32_MAX;\r\n    this.maxBinLength = options?.maxBinLength ?? UINT32_MAX;\r\n    this.maxArrayLength = options?.maxArrayLength ?? UINT32_MAX;\r\n    this.maxMapLength = options?.maxMapLength ?? UINT32_MAX;\r\n    this.maxExtLength = options?.maxExtLength ?? UINT32_MAX;\r\n    this.keyDecoder = options?.keyDecoder !== undefined ? options.keyDecoder : sharedCachedKeyDecoder;\r\n  }\r\n\r\n  private reinitializeState() {\r\n    this.totalPos = 0;\r\n    this.headByte = HEAD_BYTE_REQUIRED;\r\n    this.stack.reset();\r\n\r\n    // view, bytes, and pos will be re-initialized in setBuffer()\r\n  }\r\n\r\n  private setBuffer(buffer: ArrayLike<number> | BufferSource): void {\r\n    this.bytes = ensureUint8Array(buffer);\r\n    this.view = createDataView(this.bytes);\r\n    this.pos = 0;\r\n  }\r\n\r\n  private appendBuffer(buffer: ArrayLike<number> | BufferSource) {\r\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\r\n      this.setBuffer(buffer);\r\n    } else {\r\n      const remainingData = this.bytes.subarray(this.pos);\r\n      const newData = ensureUint8Array(buffer);\r\n\r\n      // concat remainingData + newData\r\n      const newBuffer = new Uint8Array(remainingData.length + newData.length);\r\n      newBuffer.set(remainingData);\r\n      newBuffer.set(newData, remainingData.length);\r\n      this.setBuffer(newBuffer);\r\n    }\r\n  }\r\n\r\n  private hasRemaining(size: number) {\r\n    return this.view.byteLength - this.pos >= size;\r\n  }\r\n\r\n  private createExtraByteError(posToShow: number): Error {\r\n    const { view, pos } = this;\r\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\r\n  }\r\n\r\n  /**\r\n   * @throws {@link DecodeError}\r\n   * @throws {@link RangeError}\r\n   */\r\n  public decode(buffer: ArrayLike<number> | BufferSource): unknown {\r\n    this.reinitializeState();\r\n    this.setBuffer(buffer);\r\n\r\n    const object = this.doDecodeSync();\r\n    if (this.hasRemaining(1)) {\r\n      throw this.createExtraByteError(this.pos);\r\n    }\r\n    return object;\r\n  }\r\n\r\n  public *decodeMulti(buffer: ArrayLike<number> | BufferSource): Generator<unknown, void, unknown> {\r\n    this.reinitializeState();\r\n    this.setBuffer(buffer);\r\n\r\n    while (this.hasRemaining(1)) {\r\n      yield this.doDecodeSync();\r\n    }\r\n  }\r\n\r\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>): Promise<unknown> {\r\n    let decoded = false;\r\n    let object: unknown;\r\n    for await (const buffer of stream) {\r\n      if (decoded) {\r\n        throw this.createExtraByteError(this.totalPos);\r\n      }\r\n\r\n      this.appendBuffer(buffer);\r\n\r\n      try {\r\n        object = this.doDecodeSync();\r\n        decoded = true;\r\n      } catch (e) {\r\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\r\n          throw e; // rethrow\r\n        }\r\n        // fallthrough\r\n      }\r\n      this.totalPos += this.pos;\r\n    }\r\n\r\n    if (decoded) {\r\n      if (this.hasRemaining(1)) {\r\n        throw this.createExtraByteError(this.totalPos);\r\n      }\r\n      return object;\r\n    }\r\n\r\n    const { headByte, pos, totalPos } = this;\r\n    throw new RangeError(\r\n      `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\r\n    );\r\n  }\r\n\r\n  public decodeArrayStream(\r\n    stream: AsyncIterable<ArrayLike<number> | BufferSource>,\r\n  ): AsyncGenerator<unknown, void, unknown> {\r\n    return this.decodeMultiAsync(stream, true);\r\n  }\r\n\r\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | BufferSource>): AsyncGenerator<unknown, void, unknown> {\r\n    return this.decodeMultiAsync(stream, false);\r\n  }\r\n\r\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>, isArray: boolean) {\r\n    let isArrayHeaderRequired = isArray;\r\n    let arrayItemsLeft = -1;\r\n\r\n    for await (const buffer of stream) {\r\n      if (isArray && arrayItemsLeft === 0) {\r\n        throw this.createExtraByteError(this.totalPos);\r\n      }\r\n\r\n      this.appendBuffer(buffer);\r\n\r\n      if (isArrayHeaderRequired) {\r\n        arrayItemsLeft = this.readArraySize();\r\n        isArrayHeaderRequired = false;\r\n        this.complete();\r\n      }\r\n\r\n      try {\r\n        while (true) {\r\n          yield this.doDecodeSync();\r\n          if (--arrayItemsLeft === 0) {\r\n            break;\r\n          }\r\n        }\r\n      } catch (e) {\r\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\r\n          throw e; // rethrow\r\n        }\r\n        // fallthrough\r\n      }\r\n      this.totalPos += this.pos;\r\n    }\r\n  }\r\n\r\n  private doDecodeSync(): unknown {\r\n    DECODE: while (true) {\r\n      const headByte = this.readHeadByte();\r\n      let object: unknown;\r\n\r\n      if (headByte >= 0xe0) {\r\n        // negative fixint (111x xxxx) 0xe0 - 0xff\r\n        object = headByte - 0x100;\r\n      } else if (headByte < 0xc0) {\r\n        if (headByte < 0x80) {\r\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\r\n          object = headByte;\r\n        } else if (headByte < 0x90) {\r\n          // fixmap (1000 xxxx) 0x80 - 0x8f\r\n          const size = headByte - 0x80;\r\n          if (size !== 0) {\r\n            this.pushMapState(size);\r\n            this.complete();\r\n            continue DECODE;\r\n          } else {\r\n            object = {};\r\n          }\r\n        } else if (headByte < 0xa0) {\r\n          // fixarray (1001 xxxx) 0x90 - 0x9f\r\n          const size = headByte - 0x90;\r\n          if (size !== 0) {\r\n            this.pushArrayState(size);\r\n            this.complete();\r\n            continue DECODE;\r\n          } else {\r\n            object = [];\r\n          }\r\n        } else {\r\n          // fixstr (101x xxxx) 0xa0 - 0xbf\r\n          const byteLength = headByte - 0xa0;\r\n          object = this.decodeUtf8String(byteLength, 0);\r\n        }\r\n      } else if (headByte === 0xc0) {\r\n        // nil\r\n        object = null;\r\n      } else if (headByte === 0xc2) {\r\n        // false\r\n        object = false;\r\n      } else if (headByte === 0xc3) {\r\n        // true\r\n        object = true;\r\n      } else if (headByte === 0xca) {\r\n        // float 32\r\n        object = this.readF32();\r\n      } else if (headByte === 0xcb) {\r\n        // float 64\r\n        object = this.readF64();\r\n      } else if (headByte === 0xcc) {\r\n        // uint 8\r\n        object = this.readU8();\r\n      } else if (headByte === 0xcd) {\r\n        // uint 16\r\n        object = this.readU16();\r\n      } else if (headByte === 0xce) {\r\n        // uint 32\r\n        object = this.readU32();\r\n      } else if (headByte === 0xcf) {\r\n        // uint 64\r\n        if (this.useBigInt64) {\r\n          object = this.readU64AsBigInt();\r\n        } else {\r\n          object = this.readU64();\r\n        }\r\n      } else if (headByte === 0xd0) {\r\n        // int 8\r\n        object = this.readI8();\r\n      } else if (headByte === 0xd1) {\r\n        // int 16\r\n        object = this.readI16();\r\n      } else if (headByte === 0xd2) {\r\n        // int 32\r\n        object = this.readI32();\r\n      } else if (headByte === 0xd3) {\r\n        // int 64\r\n        if (this.useBigInt64) {\r\n          object = this.readI64AsBigInt();\r\n        } else {\r\n          object = this.readI64();\r\n        }\r\n      } else if (headByte === 0xd9) {\r\n        // str 8\r\n        const byteLength = this.lookU8();\r\n        object = this.decodeUtf8String(byteLength, 1);\r\n      } else if (headByte === 0xda) {\r\n        // str 16\r\n        const byteLength = this.lookU16();\r\n        object = this.decodeUtf8String(byteLength, 2);\r\n      } else if (headByte === 0xdb) {\r\n        // str 32\r\n        const byteLength = this.lookU32();\r\n        object = this.decodeUtf8String(byteLength, 4);\r\n      } else if (headByte === 0xdc) {\r\n        // array 16\r\n        const size = this.readU16();\r\n        if (size !== 0) {\r\n          this.pushArrayState(size);\r\n          this.complete();\r\n          continue DECODE;\r\n        } else {\r\n          object = [];\r\n        }\r\n      } else if (headByte === 0xdd) {\r\n        // array 32\r\n        const size = this.readU32();\r\n        if (size !== 0) {\r\n          this.pushArrayState(size);\r\n          this.complete();\r\n          continue DECODE;\r\n        } else {\r\n          object = [];\r\n        }\r\n      } else if (headByte === 0xde) {\r\n        // map 16\r\n        const size = this.readU16();\r\n        if (size !== 0) {\r\n          this.pushMapState(size);\r\n          this.complete();\r\n          continue DECODE;\r\n        } else {\r\n          object = {};\r\n        }\r\n      } else if (headByte === 0xdf) {\r\n        // map 32\r\n        const size = this.readU32();\r\n        if (size !== 0) {\r\n          this.pushMapState(size);\r\n          this.complete();\r\n          continue DECODE;\r\n        } else {\r\n          object = {};\r\n        }\r\n      } else if (headByte === 0xc4) {\r\n        // bin 8\r\n        const size = this.lookU8();\r\n        object = this.decodeBinary(size, 1);\r\n      } else if (headByte === 0xc5) {\r\n        // bin 16\r\n        const size = this.lookU16();\r\n        object = this.decodeBinary(size, 2);\r\n      } else if (headByte === 0xc6) {\r\n        // bin 32\r\n        const size = this.lookU32();\r\n        object = this.decodeBinary(size, 4);\r\n      } else if (headByte === 0xd4) {\r\n        // fixext 1\r\n        object = this.decodeExtension(1, 0);\r\n      } else if (headByte === 0xd5) {\r\n        // fixext 2\r\n        object = this.decodeExtension(2, 0);\r\n      } else if (headByte === 0xd6) {\r\n        // fixext 4\r\n        object = this.decodeExtension(4, 0);\r\n      } else if (headByte === 0xd7) {\r\n        // fixext 8\r\n        object = this.decodeExtension(8, 0);\r\n      } else if (headByte === 0xd8) {\r\n        // fixext 16\r\n        object = this.decodeExtension(16, 0);\r\n      } else if (headByte === 0xc7) {\r\n        // ext 8\r\n        const size = this.lookU8();\r\n        object = this.decodeExtension(size, 1);\r\n      } else if (headByte === 0xc8) {\r\n        // ext 16\r\n        const size = this.lookU16();\r\n        object = this.decodeExtension(size, 2);\r\n      } else if (headByte === 0xc9) {\r\n        // ext 32\r\n        const size = this.lookU32();\r\n        object = this.decodeExtension(size, 4);\r\n      } else {\r\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\r\n      }\r\n\r\n      this.complete();\r\n\r\n      const stack = this.stack;\r\n      while (stack.length > 0) {\r\n        // arrays and maps\r\n        const state = stack.top()!;\r\n        if (state.type === STATE_ARRAY) {\r\n          state.array[state.position] = object;\r\n          state.position++;\r\n          if (state.position === state.size) {\r\n            object = state.array;\r\n            stack.release(state);\r\n          } else {\r\n            continue DECODE;\r\n          }\r\n        } else if (state.type === STATE_MAP_KEY) {\r\n          if (!isValidMapKeyType(object)) {\r\n            throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\r\n          }\r\n          if (object === \"__proto__\") {\r\n            throw new DecodeError(\"The key __proto__ is not allowed\");\r\n          }\r\n\r\n          state.key = object;\r\n          state.type = STATE_MAP_VALUE;\r\n          continue DECODE;\r\n        } else {\r\n          // it must be `state.type === State.MAP_VALUE` here\r\n\r\n          state.map[state.key!] = object;\r\n          state.readCount++;\r\n\r\n          if (state.readCount === state.size) {\r\n            object = state.map;\r\n            stack.release(state);\r\n          } else {\r\n            state.key = null;\r\n            state.type = STATE_MAP_KEY;\r\n            continue DECODE;\r\n          }\r\n        }\r\n      }\r\n\r\n      return object;\r\n    }\r\n  }\r\n\r\n  private readHeadByte(): number {\r\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\r\n      this.headByte = this.readU8();\r\n      // console.log(\"headByte\", prettyByte(this.headByte));\r\n    }\r\n\r\n    return this.headByte;\r\n  }\r\n\r\n  private complete(): void {\r\n    this.headByte = HEAD_BYTE_REQUIRED;\r\n  }\r\n\r\n  private readArraySize(): number {\r\n    const headByte = this.readHeadByte();\r\n\r\n    switch (headByte) {\r\n      case 0xdc:\r\n        return this.readU16();\r\n      case 0xdd:\r\n        return this.readU32();\r\n      default: {\r\n        if (headByte < 0xa0) {\r\n          return headByte - 0x90;\r\n        } else {\r\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private pushMapState(size: number) {\r\n    if (size > this.maxMapLength) {\r\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\r\n    }\r\n\r\n    this.stack.pushMapState(size);\r\n  }\r\n\r\n  private pushArrayState(size: number) {\r\n    if (size > this.maxArrayLength) {\r\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\r\n    }\r\n\r\n    this.stack.pushArrayState(size);\r\n  }\r\n\r\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\r\n    if (byteLength > this.maxStrLength) {\r\n      throw new DecodeError(\r\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\r\n      );\r\n    }\r\n\r\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\r\n      throw MORE_DATA;\r\n    }\r\n\r\n    const offset = this.pos + headerOffset;\r\n    let object: string;\r\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\r\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\r\n    } else {\r\n      object = utf8Decode(this.bytes, offset, byteLength);\r\n    }\r\n    this.pos += headerOffset + byteLength;\r\n    return object;\r\n  }\r\n\r\n  private stateIsMapKey(): boolean {\r\n    if (this.stack.length > 0) {\r\n      const state = this.stack.top()!;\r\n      return state.type === STATE_MAP_KEY;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\r\n    if (byteLength > this.maxBinLength) {\r\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\r\n    }\r\n\r\n    if (!this.hasRemaining(byteLength + headOffset)) {\r\n      throw MORE_DATA;\r\n    }\r\n\r\n    const offset = this.pos + headOffset;\r\n    const object = this.bytes.subarray(offset, offset + byteLength);\r\n    this.pos += headOffset + byteLength;\r\n    return object;\r\n  }\r\n\r\n  private decodeExtension(size: number, headOffset: number): unknown {\r\n    if (size > this.maxExtLength) {\r\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\r\n    }\r\n\r\n    const extType = this.view.getInt8(this.pos + headOffset);\r\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\r\n    return this.extensionCodec.decode(data, extType, this.context);\r\n  }\r\n\r\n  private lookU8() {\r\n    return this.view.getUint8(this.pos);\r\n  }\r\n\r\n  private lookU16() {\r\n    return this.view.getUint16(this.pos);\r\n  }\r\n\r\n  private lookU32() {\r\n    return this.view.getUint32(this.pos);\r\n  }\r\n\r\n  private readU8(): number {\r\n    const value = this.view.getUint8(this.pos);\r\n    this.pos++;\r\n    return value;\r\n  }\r\n\r\n  private readI8(): number {\r\n    const value = this.view.getInt8(this.pos);\r\n    this.pos++;\r\n    return value;\r\n  }\r\n\r\n  private readU16(): number {\r\n    const value = this.view.getUint16(this.pos);\r\n    this.pos += 2;\r\n    return value;\r\n  }\r\n\r\n  private readI16(): number {\r\n    const value = this.view.getInt16(this.pos);\r\n    this.pos += 2;\r\n    return value;\r\n  }\r\n\r\n  private readU32(): number {\r\n    const value = this.view.getUint32(this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n  }\r\n\r\n  private readI32(): number {\r\n    const value = this.view.getInt32(this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n  }\r\n\r\n  private readU64(): number {\r\n    const value = getUint64(this.view, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n  }\r\n\r\n  private readI64(): number {\r\n    const value = getInt64(this.view, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n  }\r\n\r\n  private readU64AsBigInt(): bigint {\r\n    const value = this.view.getBigUint64(this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n  }\r\n\r\n  private readI64AsBigInt(): bigint {\r\n    const value = this.view.getBigInt64(this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n  }\r\n\r\n  private readF32() {\r\n    const value = this.view.getFloat32(this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n  }\r\n\r\n  private readF64() {\r\n    const value = this.view.getFloat64(this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n  }\r\n}\r\n","import { Decoder } from \"./Decoder\";\r\nimport type { DecoderOptions } from \"./Decoder\";\r\nimport type { SplitUndefined } from \"./context\";\r\n\r\n/**\r\n * @deprecated Use {@link DecoderOptions} instead.\r\n */\r\nexport type DecodeOptions = never;\r\n\r\n/**\r\n * @deprecated No longer supported.\r\n */\r\nexport const defaultDecodeOptions: never = undefined as never;\r\n\r\n/**\r\n * It decodes a single MessagePack object in a buffer.\r\n *\r\n * This is a synchronous decoding function.\r\n * See other variants for asynchronous decoding: {@link decodeAsync}, {@link decodeStream}, or {@link decodeArrayStream}.\r\n *\r\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\r\n * @throws {@link DecodeError} if the buffer contains invalid data.\r\n */\r\nexport function decode<ContextType = undefined>(\r\n  buffer: ArrayLike<number> | BufferSource,\r\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\r\n): unknown {\r\n  const decoder = new Decoder(options);\r\n  return decoder.decode(buffer);\r\n}\r\n\r\n/**\r\n * It decodes multiple MessagePack objects in a buffer.\r\n * This is corresponding to {@link decodeMultiStream}.\r\n *\r\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\r\n * @throws {@link DecodeError} if the buffer contains invalid data.\r\n */\r\nexport function decodeMulti<ContextType = undefined>(\r\n  buffer: ArrayLike<number> | BufferSource,\r\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\r\n): Generator<unknown, void, unknown> {\r\n  const decoder = new Decoder(options);\r\n  return decoder.decodeMulti(buffer);\r\n}\r\n","// utility for whatwg streams\r\n\r\n// The living standard of whatwg streams says\r\n// ReadableStream is also AsyncIterable, but\r\n// as of June 2019, no browser implements it.\r\n// See https://streams.spec.whatwg.org/ for details\r\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\r\n\r\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\r\n  return (object as any)[Symbol.asyncIterator] != null;\r\n}\r\n\r\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\r\n  if (value == null) {\r\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\r\n  }\r\n}\r\n\r\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\r\n  const reader = stream.getReader();\r\n\r\n  try {\r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      if (done) {\r\n        return;\r\n      }\r\n      assertNonNull(value);\r\n      yield value;\r\n    }\r\n  } finally {\r\n    reader.releaseLock();\r\n  }\r\n}\r\n\r\nexport function ensureAsyncIterable<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\r\n  if (isAsyncIterable(streamLike)) {\r\n    return streamLike;\r\n  } else {\r\n    return asyncIterableFromStream(streamLike);\r\n  }\r\n}\r\n","import { Decoder } from \"./Decoder\";\r\nimport { ensureAsyncIterable } from \"./utils/stream\";\r\nimport type { DecoderOptions } from \"./Decoder\";\r\nimport type { ReadableStreamLike } from \"./utils/stream\";\r\nimport type { SplitUndefined } from \"./context\";\r\n\r\n/**\r\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\r\n * @throws {@link DecodeError} if the buffer contains invalid data.\r\n */\r\nexport async function decodeAsync<ContextType = undefined>(\r\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\r\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\r\n): Promise<unknown> {\r\n  const stream = ensureAsyncIterable(streamLike);\r\n  const decoder = new Decoder(options);\r\n  return decoder.decodeAsync(stream);\r\n}\r\n\r\n/**\r\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\r\n * @throws {@link DecodeError} if the buffer contains invalid data.\r\n */\r\nexport function decodeArrayStream<ContextType>(\r\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\r\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\r\n): AsyncGenerator<unknown, void, unknown> {\r\n  const stream = ensureAsyncIterable(streamLike);\r\n  const decoder = new Decoder(options);\r\n  return decoder.decodeArrayStream(stream);\r\n}\r\n\r\n/**\r\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\r\n * @throws {@link DecodeError} if the buffer contains invalid data.\r\n */\r\nexport function decodeMultiStream<ContextType>(\r\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\r\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\r\n): AsyncGenerator<unknown, void, unknown> {\r\n  const stream = ensureAsyncIterable(streamLike);\r\n  const decoder = new Decoder(options);\r\n  return decoder.decodeStream(stream);\r\n}\r\n\r\n/**\r\n * @deprecated Use {@link decodeMultiStream} instead.\r\n */\r\nexport const decodeStream: never = undefined as never;\r\n"],"names":[],"mappings":"AAAM,SAAU,SAAS,CAAC,GAAW,EAAA;AACnC,IAAA,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;IAE7B,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,IAAI,GAAG,GAAG,CAAC,CAAC;AACZ,IAAA,OAAO,GAAG,GAAG,SAAS,EAAE;QACtB,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;QAElC,IAAI,CAAC,KAAK,GAAG,UAAU,MAAM,CAAC,EAAE;AAE9B,YAAA,UAAU,EAAE,CAAC;YACb,SAAS;SACV;aAAM,IAAI,CAAC,KAAK,GAAG,UAAU,MAAM,CAAC,EAAE;YAErC,UAAU,IAAI,CAAC,CAAC;SACjB;aAAM;YAEL,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,EAAE;AAEtC,gBAAA,IAAI,GAAG,GAAG,SAAS,EAAE;oBACnB,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBAClC,IAAI,CAAC,KAAK,GAAG,MAAM,MAAM,MAAM,EAAE;AAC/B,wBAAA,EAAE,GAAG,CAAC;AACN,wBAAA,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,KAAK,EAAE,KAAK,KAAK,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC;qBAC7D;iBACF;aACF;YAED,IAAI,CAAC,KAAK,GAAG,UAAU,MAAM,CAAC,EAAE;gBAE9B,UAAU,IAAI,CAAC,CAAC;aACjB;iBAAM;gBAEL,UAAU,IAAI,CAAC,CAAC;aACjB;SACF;KACF;AACD,IAAA,OAAO,UAAU,CAAC;AACpB,CAAC;SAEe,YAAY,CAAC,GAAW,EAAE,MAAkB,EAAE,YAAoB,EAAA;AAChF,IAAA,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;IAC7B,IAAI,MAAM,GAAG,YAAY,CAAC;IAC1B,IAAI,GAAG,GAAG,CAAC,CAAC;AACZ,IAAA,OAAO,GAAG,GAAG,SAAS,EAAE;QACtB,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;QAElC,IAAI,CAAC,KAAK,GAAG,UAAU,MAAM,CAAC,EAAE;AAE9B,YAAA,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC;YACzB,SAAS;SACV;aAAM,IAAI,CAAC,KAAK,GAAG,UAAU,MAAM,CAAC,EAAE;AAErC,YAAA,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC;SACjD;aAAM;YAEL,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,EAAE;AAEtC,gBAAA,IAAI,GAAG,GAAG,SAAS,EAAE;oBACnB,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBAClC,IAAI,CAAC,KAAK,GAAG,MAAM,MAAM,MAAM,EAAE;AAC/B,wBAAA,EAAE,GAAG,CAAC;AACN,wBAAA,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,KAAK,EAAE,KAAK,KAAK,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC;qBAC7D;iBACF;aACF;YAED,IAAI,CAAC,KAAK,GAAG,UAAU,MAAM,CAAC,EAAE;AAE9B,gBAAA,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC;AACjD,gBAAA,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC;aACjD;iBAAM;AAEL,gBAAA,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC;AACjD,gBAAA,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC;AACjD,gBAAA,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC;aACjD;SACF;AAED,QAAA,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC;KAC1C;AACH,CAAC;AASD,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAE,CAAC;AAI5C,MAAM,sBAAsB,GAAG,EAAE,CAAC;SAElB,YAAY,CAAC,GAAW,EAAE,MAAkB,EAAE,YAAoB,EAAA;AAChF,IAAA,iBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;AACnE,CAAC;SAEe,UAAU,CAAC,GAAW,EAAE,MAAkB,EAAE,YAAoB,EAAA;AAC9E,IAAA,IAAI,GAAG,CAAC,MAAM,GAAG,sBAAsB,EAAE;AACvC,QAAA,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;KACzC;SAAM;AACL,QAAA,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;KACzC;AACH,CAAC;AAED,MAAM,UAAU,GAAG,IAAO,CAAC;SAEX,YAAY,CAAC,KAAiB,EAAE,WAAmB,EAAE,UAAkB,EAAA;IACrF,IAAI,MAAM,GAAG,WAAW,CAAC;AACzB,IAAA,MAAM,GAAG,GAAG,MAAM,GAAG,UAAU,CAAC;IAEhC,MAAM,KAAK,GAAkB,EAAE,CAAC;IAChC,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAA,OAAO,MAAM,GAAG,GAAG,EAAE;AACnB,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,EAAE;AAExB,YAAA,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;aAAM,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,IAAI,EAAE;YAElC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAE,GAAG,IAAI,CAAC;AACtC,YAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC;SAC3C;aAAM,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,IAAI,EAAE;YAElC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAE,GAAG,IAAI,CAAC;YACtC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAE,GAAG,IAAI,CAAC;YACtC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;SAC3D;aAAM,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,IAAI,EAAE;YAElC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAE,GAAG,IAAI,CAAC;YACtC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAE,GAAG,IAAI,CAAC;YACtC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAE,GAAG,IAAI,CAAC;YACtC,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC;AAChF,YAAA,IAAI,IAAI,GAAG,MAAM,EAAE;gBACjB,IAAI,IAAI,OAAO,CAAC;AAChB,gBAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC;gBAC7C,IAAI,GAAG,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC;aAChC;AACD,YAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClB;aAAM;AACL,YAAA,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;AAED,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,UAAU,EAAE;YAC9B,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,CAAC;AACxC,YAAA,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;SAClB;KACF;AAED,IAAA,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,CAAC;KACzC;AAED,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAE,CAAC;AAI5C,MAAM,sBAAsB,GAAG,GAAG,CAAC;SAEnB,YAAY,CAAC,KAAiB,EAAE,WAAmB,EAAE,UAAkB,EAAA;AACrF,IAAA,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,WAAW,GAAG,UAAU,CAAC,CAAC;AAC1E,IAAA,OAAO,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC/C,CAAC;SAEe,UAAU,CAAC,KAAiB,EAAE,WAAmB,EAAE,UAAkB,EAAA;AACnF,IAAA,IAAI,UAAU,GAAG,sBAAsB,EAAE;QACvC,OAAO,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;KACrD;SAAM;QACL,OAAO,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;KACrD;AACH;;MC7Ka,OAAO,CAAA;IAClB,WACW,CAAA,IAAY,EACZ,IAAgB,EAAA;QADhB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QACZ,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;KACvB;AACL;;ACRK,MAAO,WAAY,SAAQ,KAAK,CAAA;AACpC,IAAA,WAAA,CAAY,OAAe,EAAA;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;QAGf,MAAM,KAAK,GAAiC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACjF,QAAA,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAEnC,QAAA,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;AAClC,YAAA,YAAY,EAAE,IAAI;AAClB,YAAA,UAAU,EAAE,KAAK;YACjB,KAAK,EAAE,WAAW,CAAC,IAAI;AACxB,SAAA,CAAC,CAAC;KACJ;AACF;;ACZM,MAAM,UAAU,GAAG,UAAW,CAAC;SAKtB,SAAS,CAAC,IAAc,EAAE,MAAc,EAAE,KAAa,EAAA;AACrE,IAAA,MAAM,IAAI,GAAG,KAAK,GAAG,UAAa,CAAC;IACnC,MAAM,GAAG,GAAG,KAAK,CAAC;AAClB,IAAA,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAClC,CAAC;SAEe,QAAQ,CAAC,IAAc,EAAE,MAAc,EAAE,KAAa,EAAA;IACpE,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAa,CAAC,CAAC;IAC/C,MAAM,GAAG,GAAG,KAAK,CAAC;AAClB,IAAA,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAClC,CAAC;AAEe,SAAA,QAAQ,CAAC,IAAc,EAAE,MAAc,EAAA;IACrD,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACnC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACvC,IAAA,OAAO,IAAI,GAAG,UAAa,GAAG,GAAG,CAAC;AACpC,CAAC;AAEe,SAAA,SAAS,CAAC,IAAc,EAAE,MAAc,EAAA;IACtD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACpC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACvC,IAAA,OAAO,IAAI,GAAG,UAAa,GAAG,GAAG,CAAC;AACpC;;AC3Ba,MAAA,aAAa,GAAG,CAAC,EAAE;AAOhC,MAAM,mBAAmB,GAAG,WAAW,GAAG,CAAC,CAAC;AAC5C,MAAM,mBAAmB,GAAG,WAAW,GAAG,CAAC,CAAC;SAE5B,yBAAyB,CAAC,EAAE,GAAG,EAAE,IAAI,EAAY,EAAA;AAC/D,IAAA,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,mBAAmB,EAAE;QAEvD,IAAI,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,mBAAmB,EAAE;AAE5C,YAAA,MAAM,EAAE,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AACrC,YAAA,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,YAAA,OAAO,EAAE,CAAC;SACX;aAAM;AAEL,YAAA,MAAM,OAAO,GAAG,GAAG,GAAG,WAAW,CAAC;AAClC,YAAA,MAAM,MAAM,GAAG,GAAG,GAAG,UAAU,CAAC;AAChC,YAAA,MAAM,EAAE,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAErC,YAAA,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;AAEjD,YAAA,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAC1B,YAAA,OAAO,EAAE,CAAC;SACX;KACF;SAAM;AAEL,QAAA,MAAM,EAAE,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACxB,QAAA,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,QAAA,OAAO,EAAE,CAAC;KACX;AACH,CAAC;AAEK,SAAU,oBAAoB,CAAC,IAAU,EAAA;AAC7C,IAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAGtC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;IACzC,OAAO;QACL,GAAG,EAAE,GAAG,GAAG,SAAS;AACpB,QAAA,IAAI,EAAE,IAAI,GAAG,SAAS,GAAG,GAAG;KAC7B,CAAC;AACJ,CAAC;AAEK,SAAU,wBAAwB,CAAC,MAAe,EAAA;AACtD,IAAA,IAAI,MAAM,YAAY,IAAI,EAAE;AAC1B,QAAA,MAAM,QAAQ,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAA,OAAO,yBAAyB,CAAC,QAAQ,CAAC,CAAC;KAC5C;SAAM;AACL,QAAA,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAEK,SAAU,yBAAyB,CAAC,IAAgB,EAAA;AACxD,IAAA,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAGzE,IAAA,QAAQ,IAAI,CAAC,UAAU;QACrB,KAAK,CAAC,EAAE;YAEN,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,IAAI,GAAG,CAAC,CAAC;AACf,YAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;SACtB;QACD,KAAK,CAAC,EAAE;YAEN,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,GAAG,GAAG,CAAC,iBAAiB,GAAG,GAAG,IAAI,WAAW,GAAG,QAAQ,CAAC;AAC/D,YAAA,MAAM,IAAI,GAAG,iBAAiB,KAAK,CAAC,CAAC;AACrC,YAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;SACtB;QACD,KAAK,EAAE,EAAE;YAGP,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC/B,YAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;SACtB;AACD,QAAA;YACE,MAAM,IAAI,WAAW,CAAC,CAAA,6DAAA,EAAgE,IAAI,CAAC,MAAM,CAAE,CAAA,CAAC,CAAC;KACxG;AACH,CAAC;AAEK,SAAU,wBAAwB,CAAC,IAAgB,EAAA;AACvD,IAAA,MAAM,QAAQ,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;AACjD,IAAA,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;AAC5D,CAAC;AAEM,MAAM,kBAAkB,GAAG;AAChC,IAAA,IAAI,EAAE,aAAa;AACnB,IAAA,MAAM,EAAE,wBAAwB;AAChC,IAAA,MAAM,EAAE,wBAAwB;CACjC;;MCtFY,cAAc,CAAA;AAgBzB,IAAA,WAAA,GAAA;QAPiB,IAAe,CAAA,eAAA,GAAgE,EAAE,CAAC;QAClF,IAAe,CAAA,eAAA,GAAgE,EAAE,CAAC;QAGlF,IAAQ,CAAA,QAAA,GAAgE,EAAE,CAAC;QAC3E,IAAQ,CAAA,QAAA,GAAgE,EAAE,CAAC;AAG1F,QAAA,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;KACnC;AAEM,IAAA,QAAQ,CAAC,EACd,IAAI,EACJ,MAAM,EACN,MAAM,GAKP,EAAA;AACC,QAAA,IAAI,IAAI,IAAI,CAAC,EAAE;AAEb,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC7B,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;SAC9B;aAAM;AAEL,YAAA,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;AACvB,YAAA,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;AACrC,YAAA,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;SACtC;KACF;IAEM,WAAW,CAAC,MAAe,EAAE,OAAoB,EAAA;AAEtD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpD,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAC1C,YAAA,IAAI,SAAS,IAAI,IAAI,EAAE;gBACrB,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACxC,gBAAA,IAAI,IAAI,IAAI,IAAI,EAAE;AAChB,oBAAA,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACpB,oBAAA,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAChC;aACF;SACF;AAGD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACnC,YAAA,IAAI,SAAS,IAAI,IAAI,EAAE;gBACrB,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACxC,gBAAA,IAAI,IAAI,IAAI,IAAI,EAAE;oBAChB,MAAM,IAAI,GAAG,CAAC,CAAC;AACf,oBAAA,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAChC;aACF;SACF;AAED,QAAA,IAAI,MAAM,YAAY,OAAO,EAAE;AAE7B,YAAA,OAAO,MAAM,CAAC;SACf;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAEM,IAAA,MAAM,CAAC,IAAgB,EAAE,IAAY,EAAE,OAAoB,EAAA;QAChE,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnF,IAAI,SAAS,EAAE;YACb,OAAO,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SACvC;aAAM;AAEL,YAAA,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAChC;KACF;;AAhFsB,cAAA,CAAA,YAAY,GAAkC,IAAI,cAAc,EAAE;;ACtBrF,SAAU,gBAAgB,CAAC,MAAsE,EAAA;AACrG,IAAA,IAAI,MAAM,YAAY,UAAU,EAAE;AAChC,QAAA,OAAO,MAAM,CAAC;KACf;AAAM,SAAA,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AACrC,QAAA,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;KAC5E;AAAM,SAAA,IAAI,MAAM,YAAY,WAAW,EAAE;AACxC,QAAA,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;KAC/B;SAAM;AAEL,QAAA,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;AACH,CAAC;AAEK,SAAU,cAAc,CAAC,MAAyD,EAAA;AACtF,IAAA,IAAI,MAAM,YAAY,WAAW,EAAE;AACjC,QAAA,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC7B;AAED,IAAA,MAAM,UAAU,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC5C,IAAA,OAAO,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC;AACvF;;ACbO,MAAM,iBAAiB,GAAG,GAAG,CAAC;AAC9B,MAAM,2BAA2B,GAAG,IAAI,CAAC;MAiEnC,OAAO,CAAA;AAelB,IAAA,WAAA,CAAmB,OAAqC,EAAA;QACtD,IAAI,CAAC,cAAc,GAAG,OAAO,EAAE,cAAc,IAAK,cAAc,CAAC,YAAgD,CAAC;AAClH,QAAA,IAAI,CAAC,OAAO,GAAI,OAAgD,EAAE,OAAsB,CAAC;QAEzF,IAAI,CAAC,WAAW,GAAG,OAAO,EAAE,WAAW,IAAI,KAAK,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,OAAO,EAAE,QAAQ,IAAI,iBAAiB,CAAC;QACvD,IAAI,CAAC,iBAAiB,GAAG,OAAO,EAAE,iBAAiB,IAAI,2BAA2B,CAAC;QACnF,IAAI,CAAC,QAAQ,GAAG,OAAO,EAAE,QAAQ,IAAI,KAAK,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,OAAO,EAAE,YAAY,IAAI,KAAK,CAAC;QACnD,IAAI,CAAC,eAAe,GAAG,OAAO,EAAE,eAAe,IAAI,KAAK,CAAC;QACzD,IAAI,CAAC,mBAAmB,GAAG,OAAO,EAAE,mBAAmB,IAAI,KAAK,CAAC;AAEjE,QAAA,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACb,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAClE,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/C;IAEO,iBAAiB,GAAA;AACvB,QAAA,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;KACd;AAOM,IAAA,eAAe,CAAC,MAAe,EAAA;QACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACzB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KACzC;AAKM,IAAA,MAAM,CAAC,MAAe,EAAA;QAC3B,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACzB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KACtC;IAEO,QAAQ,CAAC,MAAe,EAAE,KAAa,EAAA;AAC7C,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE;AACzB,YAAA,MAAM,IAAI,KAAK,CAAC,6BAA6B,KAAK,CAAA,CAAE,CAAC,CAAC;SACvD;AAED,QAAA,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;AAAM,aAAA,IAAI,OAAO,MAAM,KAAK,SAAS,EAAE;AACtC,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC5B;AAAM,aAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AACrC,YAAA,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;AAC7B,gBAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAC3B;iBAAM;AACL,gBAAA,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;aAClC;SACF;AAAM,aAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AACrC,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAC3B;aAAM,IAAI,IAAI,CAAC,WAAW,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AACzD,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;SAC7B;aAAM;AACL,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAClC;KACF;AAEO,IAAA,uBAAuB,CAAC,WAAmB,EAAA;AACjD,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC;QAE5C,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,YAAY,EAAE;AACvC,YAAA,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;SACrC;KACF;AAEO,IAAA,YAAY,CAAC,OAAe,EAAA;AAClC,QAAA,MAAM,SAAS,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAA,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;AAC3C,QAAA,MAAM,OAAO,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC;AAExC,QAAA,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEzB,QAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACpB,QAAA,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;KACvB;IAEO,SAAS,GAAA;AACf,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACpB;AAEO,IAAA,aAAa,CAAC,MAAe,EAAA;AACnC,QAAA,IAAI,MAAM,KAAK,KAAK,EAAE;AACpB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;aAAM;AACL,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;KACF;AAEO,IAAA,YAAY,CAAC,MAAc,EAAA;AACjC,QAAA,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;AAC7D,YAAA,IAAI,MAAM,IAAI,CAAC,EAAE;AACf,gBAAA,IAAI,MAAM,GAAG,IAAI,EAAE;AAEjB,oBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;iBACtB;AAAM,qBAAA,IAAI,MAAM,GAAG,KAAK,EAAE;AAEzB,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,oBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;iBACtB;AAAM,qBAAA,IAAI,MAAM,GAAG,OAAO,EAAE;AAE3B,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACvB;AAAM,qBAAA,IAAI,MAAM,GAAG,WAAW,EAAE;AAE/B,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACvB;AAAM,qBAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAE5B,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACvB;qBAAM;AACL,oBAAA,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;iBAClC;aACF;iBAAM;AACL,gBAAA,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;oBAEnB,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;iBACtC;AAAM,qBAAA,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;AAE1B,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,oBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;iBACtB;AAAM,qBAAA,IAAI,MAAM,IAAI,CAAC,MAAM,EAAE;AAE5B,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACvB;AAAM,qBAAA,IAAI,MAAM,IAAI,CAAC,UAAU,EAAE;AAEhC,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACvB;AAAM,qBAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAE5B,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACvB;qBAAM;AACL,oBAAA,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;iBAClC;aACF;SACF;aAAM;AACL,YAAA,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;SAClC;KACF;AAEO,IAAA,mBAAmB,CAAC,MAAc,EAAA;AACxC,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;AAErB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACvB;aAAM;AAEL,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACvB;KACF;AAEO,IAAA,cAAc,CAAC,MAAc,EAAA;AACnC,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;AAEvB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;SAC7B;aAAM;AAEL,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC5B;KACF;AAEO,IAAA,iBAAiB,CAAC,UAAkB,EAAA;AAC1C,QAAA,IAAI,UAAU,GAAG,EAAE,EAAE;AAEnB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;SACjC;AAAM,aAAA,IAAI,UAAU,GAAG,KAAK,EAAE;AAE7B,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC1B;AAAM,aAAA,IAAI,UAAU,GAAG,OAAO,EAAE;AAE/B,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SAC3B;AAAM,aAAA,IAAI,UAAU,GAAG,WAAW,EAAE;AAEnC,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SAC3B;aAAM;AACL,YAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,UAAU,CAAA,eAAA,CAAiB,CAAC,CAAC;SAClE;KACF;AAEO,IAAA,YAAY,CAAC,MAAc,EAAA;AACjC,QAAA,MAAM,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;AAE5B,QAAA,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,uBAAuB,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC;AACzD,QAAA,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACnC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC;KACxB;IAEO,YAAY,CAAC,MAAe,EAAE,KAAa,EAAA;AAEjD,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAClE,QAAA,IAAI,GAAG,IAAI,IAAI,EAAE;AACf,YAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;SAC3B;AAAM,aAAA,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAChC,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACjC;AAAM,aAAA,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AACrC,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SAC3B;AAAM,aAAA,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AACrC,YAAA,IAAI,CAAC,SAAS,CAAC,MAAiC,EAAE,KAAK,CAAC,CAAC;SAC1D;aAAM;AAEL,YAAA,MAAM,IAAI,KAAK,CAAC,CAAwB,qBAAA,EAAA,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAE,CAAC,CAAC;SACpF;KACF;AAEO,IAAA,YAAY,CAAC,MAAuB,EAAA;AAC1C,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC;AAC/B,QAAA,IAAI,IAAI,GAAG,KAAK,EAAE;AAEhB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;AAAM,aAAA,IAAI,IAAI,GAAG,OAAO,EAAE;AAEzB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrB;AAAM,aAAA,IAAI,IAAI,GAAG,WAAW,EAAE;AAE7B,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrB;aAAM;AACL,YAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,IAAI,CAAA,CAAE,CAAC,CAAC;SAC9C;AACD,QAAA,MAAM,KAAK,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;AACvC,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACtB;IAEO,WAAW,CAAC,MAAsB,EAAE,KAAa,EAAA;AACvD,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;AAC3B,QAAA,IAAI,IAAI,GAAG,EAAE,EAAE;AAEb,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;SAC3B;AAAM,aAAA,IAAI,IAAI,GAAG,OAAO,EAAE;AAEzB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrB;AAAM,aAAA,IAAI,IAAI,GAAG,WAAW,EAAE;AAE7B,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrB;aAAM;AACL,YAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,IAAI,CAAA,CAAE,CAAC,CAAC;SAC7C;AACD,QAAA,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;SAChC;KACF;IAEO,qBAAqB,CAAC,MAA+B,EAAE,IAA2B,EAAA;QACxF,IAAI,KAAK,GAAG,CAAC,CAAC;AAEd,QAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACtB,YAAA,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;AAC7B,gBAAA,KAAK,EAAE,CAAC;aACT;SACF;AAED,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,SAAS,CAAC,MAA+B,EAAE,KAAa,EAAA;QAC9D,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3F,QAAA,IAAI,IAAI,GAAG,EAAE,EAAE;AAEb,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;SAC3B;AAAM,aAAA,IAAI,IAAI,GAAG,OAAO,EAAE;AAEzB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrB;AAAM,aAAA,IAAI,IAAI,GAAG,WAAW,EAAE;AAE7B,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrB;aAAM;AACL,YAAA,MAAM,IAAI,KAAK,CAAC,yBAAyB,IAAI,CAAA,CAAE,CAAC,CAAC;SAClD;AAED,QAAA,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AACtB,YAAA,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAE1B,IAAI,EAAE,IAAI,CAAC,eAAe,IAAI,KAAK,KAAK,SAAS,CAAC,EAAE;AAClD,gBAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;aACjC;SACF;KACF;AAEO,IAAA,eAAe,CAAC,GAAY,EAAA;AAClC,QAAA,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAC7B,QAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AAEd,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;AAAM,aAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AAErB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;AAAM,aAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AAErB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;AAAM,aAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AAErB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;AAAM,aAAA,IAAI,IAAI,KAAK,EAAE,EAAE;AAEtB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;AAAM,aAAA,IAAI,IAAI,GAAG,KAAK,EAAE;AAEvB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpB;AAAM,aAAA,IAAI,IAAI,GAAG,OAAO,EAAE;AAEzB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrB;AAAM,aAAA,IAAI,IAAI,GAAG,WAAW,EAAE;AAE7B,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrB;aAAM;AACL,YAAA,MAAM,IAAI,KAAK,CAAC,+BAA+B,IAAI,CAAA,CAAE,CAAC,CAAC;SACxD;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvB,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACzB;AAEO,IAAA,OAAO,CAAC,KAAa,EAAA;AAC3B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,EAAE,CAAC;KACZ;AAEO,IAAA,QAAQ,CAAC,MAAyB,EAAA;AACxC,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;AAC3B,QAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;KAClB;AAEO,IAAA,OAAO,CAAC,KAAa,EAAA;AAC3B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,GAAG,EAAE,CAAC;KACZ;AAEO,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACtC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACtC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACtC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACrC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,cAAc,CAAC,KAAa,EAAA;AAClC,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AAEO,IAAA,aAAa,CAAC,KAAa,EAAA;AACjC,QAAA,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACvC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;KACf;AACF;;ACxfe,SAAA,MAAM,CACpB,KAAc,EACd,OAAqD,EAAA;AAErD,IAAA,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,IAAA,OAAO,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACxC;;AC1BM,SAAU,UAAU,CAAC,IAAY,EAAA;AACrC,IAAA,OAAO,CAAG,EAAA,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAA,EAAA,EAAK,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;AACnF;;ACAA,MAAM,sBAAsB,GAAG,EAAE,CAAC;AAClC,MAAM,0BAA0B,GAAG,EAAE,CAAC;MAWzB,gBAAgB,CAAA;AAK3B,IAAA,WAAA,CACW,YAAe,GAAA,sBAAsB,EACrC,eAAA,GAAkB,0BAA0B,EAAA;QAD5C,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAyB;QACrC,IAAe,CAAA,eAAA,GAAf,eAAe,CAA6B;QANvD,IAAG,CAAA,GAAA,GAAG,CAAC,CAAC;QACR,IAAI,CAAA,IAAA,GAAG,CAAC,CAAC;AASP,QAAA,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACjB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE;AAC1C,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACtB;KACF;AAEM,IAAA,WAAW,CAAC,UAAkB,EAAA;QACnC,OAAO,UAAU,GAAG,CAAC,IAAI,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC;KAC1D;AAEO,IAAA,IAAI,CAAC,KAAiB,EAAE,WAAmB,EAAE,UAAkB,EAAA;QACrE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAE,CAAC;AAE7C,QAAA,UAAU,EAAE,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;AACxC,YAAA,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;AAEjC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;AACnC,gBAAA,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;AAC7C,oBAAA,SAAS,UAAU,CAAC;iBACrB;aACF;YACD,OAAO,MAAM,CAAC,GAAG,CAAC;SACnB;AACD,QAAA,OAAO,IAAI,CAAC;KACb;IAEO,KAAK,CAAC,KAAiB,EAAE,KAAa,EAAA;AAC5C,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;QAC/C,MAAM,MAAM,GAAmB,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;QAErD,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,EAAE;AAG1C,YAAA,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;SACxD;aAAM;AACL,YAAA,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtB;KACF;AAEM,IAAA,MAAM,CAAC,KAAiB,EAAE,WAAmB,EAAE,UAAkB,EAAA;AACtE,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;AAC9D,QAAA,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,IAAI,CAAC,GAAG,EAAE,CAAC;AACX,YAAA,OAAO,WAAW,CAAC;SACpB;QACD,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,MAAM,GAAG,GAAG,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;AAEzD,QAAA,MAAM,iBAAiB,GAAG,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,GAAG,UAAU,CAAC,CAAC;AACxG,QAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;AACnC,QAAA,OAAO,GAAG,CAAC;KACZ;AACF;;AChBD,MAAM,WAAW,GAAG,OAAO,CAAC;AAC5B,MAAM,aAAa,GAAG,SAAS,CAAC;AAChC,MAAM,eAAe,GAAG,WAAW,CAAC;AAIpC,MAAM,iBAAiB,GAAG,CAAC,GAAY,KAAuB;IAC5D,OAAO,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC;AAC5D,CAAC,CAAC;AAiBF,MAAM,SAAS,CAAA;AAAf,IAAA,WAAA,GAAA;QACmB,IAAK,CAAA,KAAA,GAAsB,EAAE,CAAC;QACvC,IAAiB,CAAA,iBAAA,GAAG,CAAC,CAAC,CAAC;KA8EhC;AA5EC,IAAA,IAAW,MAAM,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;KACnC;IAEM,GAAG,GAAA;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KAC3C;AAEM,IAAA,cAAc,CAAC,IAAY,EAAA;AAChC,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,6BAA6B,EAAqB,CAAC;AAEtE,QAAA,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC;AACzB,QAAA,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;AACnB,QAAA,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QAClB,KAAK,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;KAC/B;AAEM,IAAA,YAAY,CAAC,IAAY,EAAA;AAC9B,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,6BAA6B,EAAmB,CAAC;AAEpE,QAAA,KAAK,CAAC,IAAI,GAAG,aAAa,CAAC;AAC3B,QAAA,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;AACpB,QAAA,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;AAClB,QAAA,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;KAChB;IAEO,6BAA6B,GAAA;QACnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAChD,YAAA,MAAM,YAAY,GAAwB;AACxC,gBAAA,IAAI,EAAE,SAAS;AACf,gBAAA,IAAI,EAAE,CAAC;AACP,gBAAA,KAAK,EAAE,SAAS;AAChB,gBAAA,QAAQ,EAAE,CAAC;AACX,gBAAA,SAAS,EAAE,CAAC;AACZ,gBAAA,GAAG,EAAE,SAAS;AACd,gBAAA,GAAG,EAAE,IAAI;aACV,CAAC;AAEF,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAA0B,CAAC,CAAC;SAC7C;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KAC3C;AAEM,IAAA,OAAO,CAAC,KAAiB,EAAA;QAC9B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAEzD,QAAA,IAAI,aAAa,KAAK,KAAK,EAAE;AAC3B,YAAA,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;SACpF;AAED,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;YAC9B,MAAM,YAAY,GAAG,KAAiC,CAAC;AACvD,YAAA,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC;AACtB,YAAA,YAAY,CAAC,KAAK,GAAG,SAAS,CAAC;AAC/B,YAAA,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC1B,YAAA,YAAY,CAAC,IAAI,GAAG,SAAS,CAAC;SAC/B;AAED,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,aAAa,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe,EAAE;YAClE,MAAM,YAAY,GAAG,KAA+B,CAAC;AACrD,YAAA,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC;AACtB,YAAA,YAAY,CAAC,GAAG,GAAG,SAAS,CAAC;AAC7B,YAAA,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B,YAAA,YAAY,CAAC,IAAI,GAAG,SAAS,CAAC;SAC/B;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;IAEM,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACtB,QAAA,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;KAC7B;AACF,CAAA;AAID,MAAM,kBAAkB,GAAG,CAAC,CAAC,CAAC;AAE9B,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,MAAM,WAAW,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAEtD,IAAI;AAGF,IAAA,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC;AAAC,OAAO,CAAC,EAAE;AACV,IAAA,IAAI,EAAE,CAAC,YAAY,UAAU,CAAC,EAAE;AAC9B,QAAA,MAAM,IAAI,KAAK,CACb,kIAAkI,CACnI,CAAC;KACH;AACH,CAAC;AACM,MAAM,6BAA6B,GAAG,WAAW;AAExD,MAAM,SAAS,GAAG,IAAI,6BAA6B,CAAC,mBAAmB,CAAC,CAAC;AAEzE,MAAM,sBAAsB,GAAG,IAAI,gBAAgB,EAAE,CAAC;MAEzC,OAAO,CAAA;AAmBlB,IAAA,WAAA,CAAmB,OAAqC,EAAA;QARhD,IAAQ,CAAA,QAAA,GAAG,CAAC,CAAC;QACb,IAAG,CAAA,GAAA,GAAG,CAAC,CAAC;QAER,IAAI,CAAA,IAAA,GAAG,UAAU,CAAC;QAClB,IAAK,CAAA,KAAA,GAAG,WAAW,CAAC;QACpB,IAAQ,CAAA,QAAA,GAAG,kBAAkB,CAAC;AACrB,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,SAAS,EAAE,CAAC;QAGvC,IAAI,CAAC,cAAc,GAAG,OAAO,EAAE,cAAc,IAAK,cAAc,CAAC,YAAgD,CAAC;AAClH,QAAA,IAAI,CAAC,OAAO,GAAI,OAAgD,EAAE,OAAsB,CAAC;QAEzF,IAAI,CAAC,WAAW,GAAG,OAAO,EAAE,WAAW,IAAI,KAAK,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,OAAO,EAAE,YAAY,IAAI,UAAU,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,OAAO,EAAE,YAAY,IAAI,UAAU,CAAC;QACxD,IAAI,CAAC,cAAc,GAAG,OAAO,EAAE,cAAc,IAAI,UAAU,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAG,OAAO,EAAE,YAAY,IAAI,UAAU,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,OAAO,EAAE,YAAY,IAAI,UAAU,CAAC;AACxD,QAAA,IAAI,CAAC,UAAU,GAAG,OAAO,EAAE,UAAU,KAAK,SAAS,GAAG,OAAO,CAAC,UAAU,GAAG,sBAAsB,CAAC;KACnG;IAEO,iBAAiB,GAAA;AACvB,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAClB,QAAA,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC;AACnC,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;KAGpB;AAEO,IAAA,SAAS,CAAC,MAAwC,EAAA;AACxD,QAAA,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvC,QAAA,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;KACd;AAEO,IAAA,YAAY,CAAC,MAAwC,EAAA;AAC3D,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,kBAAkB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;AACjE,YAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACxB;aAAM;AACL,YAAA,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpD,YAAA,MAAM,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAGzC,YAAA,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,aAAa,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACxE,YAAA,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC7B,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;AAC7C,YAAA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SAC3B;KACF;AAEO,IAAA,YAAY,CAAC,IAAY,EAAA;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;KAChD;AAEO,IAAA,oBAAoB,CAAC,SAAiB,EAAA;AAC5C,QAAA,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;AAC3B,QAAA,OAAO,IAAI,UAAU,CAAC,CAAS,MAAA,EAAA,IAAI,CAAC,UAAU,GAAG,GAAG,CAAA,IAAA,EAAO,IAAI,CAAC,UAAU,4BAA4B,SAAS,CAAA,CAAA,CAAG,CAAC,CAAC;KACrH;AAMM,IAAA,MAAM,CAAC,MAAwC,EAAA;QACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAEvB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AACnC,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;YACxB,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC3C;AACD,QAAA,OAAO,MAAM,CAAC;KACf;IAEM,CAAC,WAAW,CAAC,MAAwC,EAAA;QAC1D,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAEvB,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;AAC3B,YAAA,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;SAC3B;KACF;IAEM,MAAM,WAAW,CAAC,MAAuD,EAAA;QAC9E,IAAI,OAAO,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,MAAe,CAAC;AACpB,QAAA,WAAW,MAAM,MAAM,IAAI,MAAM,EAAE;YACjC,IAAI,OAAO,EAAE;gBACX,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChD;AAED,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAE1B,YAAA,IAAI;AACF,gBAAA,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gBAC7B,OAAO,GAAG,IAAI,CAAC;aAChB;YAAC,OAAO,CAAC,EAAE;AACV,gBAAA,IAAI,EAAE,CAAC,YAAY,6BAA6B,CAAC,EAAE;AACjD,oBAAA,MAAM,CAAC,CAAC;iBACT;aAEF;AACD,YAAA,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC;SAC3B;QAED,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBACxB,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChD;AACD,YAAA,OAAO,MAAM,CAAC;SACf;QAED,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;AACzC,QAAA,MAAM,IAAI,UAAU,CAClB,CAAA,6BAAA,EAAgC,UAAU,CAAC,QAAQ,CAAC,CAAA,IAAA,EAAO,QAAQ,CAAA,EAAA,EAAK,GAAG,CAAA,uBAAA,CAAyB,CACrG,CAAC;KACH;AAEM,IAAA,iBAAiB,CACtB,MAAuD,EAAA;QAEvD,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KAC5C;AAEM,IAAA,YAAY,CAAC,MAAuD,EAAA;QACzE,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAC7C;AAEO,IAAA,OAAO,gBAAgB,CAAC,MAAuD,EAAE,OAAgB,EAAA;QACvG,IAAI,qBAAqB,GAAG,OAAO,CAAC;AACpC,QAAA,IAAI,cAAc,GAAG,CAAC,CAAC,CAAC;AAExB,QAAA,WAAW,MAAM,MAAM,IAAI,MAAM,EAAE;AACjC,YAAA,IAAI,OAAO,IAAI,cAAc,KAAK,CAAC,EAAE;gBACnC,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChD;AAED,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAE1B,IAAI,qBAAqB,EAAE;AACzB,gBAAA,cAAc,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBACtC,qBAAqB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;AAED,YAAA,IAAI;gBACF,OAAO,IAAI,EAAE;AACX,oBAAA,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;AAC1B,oBAAA,IAAI,EAAE,cAAc,KAAK,CAAC,EAAE;wBAC1B,MAAM;qBACP;iBACF;aACF;YAAC,OAAO,CAAC,EAAE;AACV,gBAAA,IAAI,EAAE,CAAC,YAAY,6BAA6B,CAAC,EAAE;AACjD,oBAAA,MAAM,CAAC,CAAC;iBACT;aAEF;AACD,YAAA,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC;SAC3B;KACF;IAEO,YAAY,GAAA;AAClB,QAAA,MAAM,EAAE,OAAO,IAAI,EAAE;AACnB,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AACrC,YAAA,IAAI,MAAe,CAAC;AAEpB,YAAA,IAAI,QAAQ,IAAI,IAAI,EAAE;AAEpB,gBAAA,MAAM,GAAG,QAAQ,GAAG,KAAK,CAAC;aAC3B;AAAM,iBAAA,IAAI,QAAQ,GAAG,IAAI,EAAE;AAC1B,gBAAA,IAAI,QAAQ,GAAG,IAAI,EAAE;oBAEnB,MAAM,GAAG,QAAQ,CAAC;iBACnB;AAAM,qBAAA,IAAI,QAAQ,GAAG,IAAI,EAAE;AAE1B,oBAAA,MAAM,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC;AAC7B,oBAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,wBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,wBAAA,SAAS,MAAM,CAAC;qBACjB;yBAAM;wBACL,MAAM,GAAG,EAAE,CAAC;qBACb;iBACF;AAAM,qBAAA,IAAI,QAAQ,GAAG,IAAI,EAAE;AAE1B,oBAAA,MAAM,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC;AAC7B,oBAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,wBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;wBAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,wBAAA,SAAS,MAAM,CAAC;qBACjB;yBAAM;wBACL,MAAM,GAAG,EAAE,CAAC;qBACb;iBACF;qBAAM;AAEL,oBAAA,MAAM,UAAU,GAAG,QAAQ,GAAG,IAAI,CAAC;oBACnC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;iBAC/C;aACF;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAE5B,MAAM,GAAG,IAAI,CAAC;aACf;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAE5B,MAAM,GAAG,KAAK,CAAC;aAChB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAE5B,MAAM,GAAG,IAAI,CAAC;aACf;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;aACxB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,oBAAA,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;iBACjC;qBAAM;AACL,oBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;iBACzB;aACF;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;aACxB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,oBAAA,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;iBACjC;qBAAM;AACL,oBAAA,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;iBACzB;aACF;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;gBACjC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;aAC/C;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAClC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;aAC/C;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAClC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;aAC/C;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAC5B,gBAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,oBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,oBAAA,SAAS,MAAM,CAAC;iBACjB;qBAAM;oBACL,MAAM,GAAG,EAAE,CAAC;iBACb;aACF;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAC5B,gBAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,oBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,oBAAA,SAAS,MAAM,CAAC;iBACjB;qBAAM;oBACL,MAAM,GAAG,EAAE,CAAC;iBACb;aACF;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAC5B,gBAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,oBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,oBAAA,SAAS,MAAM,CAAC;iBACjB;qBAAM;oBACL,MAAM,GAAG,EAAE,CAAC;iBACb;aACF;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAC5B,gBAAA,IAAI,IAAI,KAAK,CAAC,EAAE;AACd,oBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,oBAAA,SAAS,MAAM,CAAC;iBACjB;qBAAM;oBACL,MAAM,GAAG,EAAE,CAAC;iBACb;aACF;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;gBAC3B,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACrC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC5B,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACrC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC5B,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACrC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAE5B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAE5B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAE5B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAE5B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACrC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAE5B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;aACtC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;gBAC3B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACxC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC5B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACxC;AAAM,iBAAA,IAAI,QAAQ,KAAK,IAAI,EAAE;AAE5B,gBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC5B,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACxC;iBAAM;gBACL,MAAM,IAAI,WAAW,CAAC,CAA2B,wBAAA,EAAA,UAAU,CAAC,QAAQ,CAAC,CAAE,CAAA,CAAC,CAAC;aAC1E;YAED,IAAI,CAAC,QAAQ,EAAE,CAAC;AAEhB,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,YAAA,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAEvB,gBAAA,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;AAC3B,gBAAA,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;oBAC9B,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;oBACrC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACjB,IAAI,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,IAAI,EAAE;AACjC,wBAAA,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;AACrB,wBAAA,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACtB;yBAAM;AACL,wBAAA,SAAS,MAAM,CAAC;qBACjB;iBACF;AAAM,qBAAA,IAAI,KAAK,CAAC,IAAI,KAAK,aAAa,EAAE;AACvC,oBAAA,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;wBAC9B,MAAM,IAAI,WAAW,CAAC,+CAA+C,GAAG,OAAO,MAAM,CAAC,CAAC;qBACxF;AACD,oBAAA,IAAI,MAAM,KAAK,WAAW,EAAE;AAC1B,wBAAA,MAAM,IAAI,WAAW,CAAC,kCAAkC,CAAC,CAAC;qBAC3D;AAED,oBAAA,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;AACnB,oBAAA,KAAK,CAAC,IAAI,GAAG,eAAe,CAAC;AAC7B,oBAAA,SAAS,MAAM,CAAC;iBACjB;qBAAM;oBAGL,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAI,CAAC,GAAG,MAAM,CAAC;oBAC/B,KAAK,CAAC,SAAS,EAAE,CAAC;oBAElB,IAAI,KAAK,CAAC,SAAS,KAAK,KAAK,CAAC,IAAI,EAAE;AAClC,wBAAA,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC;AACnB,wBAAA,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACtB;yBAAM;AACL,wBAAA,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;AACjB,wBAAA,KAAK,CAAC,IAAI,GAAG,aAAa,CAAC;AAC3B,wBAAA,SAAS,MAAM,CAAC;qBACjB;iBACF;aACF;AAED,YAAA,OAAO,MAAM,CAAC;SACf;KACF;IAEO,YAAY,GAAA;AAClB,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,kBAAkB,EAAE;AACxC,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;SAE/B;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAEO,QAAQ,GAAA;AACd,QAAA,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC;KACpC;IAEO,aAAa,GAAA;AACnB,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAErC,QAAQ,QAAQ;AACd,YAAA,KAAK,IAAI;AACP,gBAAA,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;AACxB,YAAA,KAAK,IAAI;AACP,gBAAA,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;YACxB,SAAS;AACP,gBAAA,IAAI,QAAQ,GAAG,IAAI,EAAE;oBACnB,OAAO,QAAQ,GAAG,IAAI,CAAC;iBACxB;qBAAM;oBACL,MAAM,IAAI,WAAW,CAAC,CAAiC,8BAAA,EAAA,UAAU,CAAC,QAAQ,CAAC,CAAE,CAAA,CAAC,CAAC;iBAChF;aACF;SACF;KACF;AAEO,IAAA,YAAY,CAAC,IAAY,EAAA;AAC/B,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE;YAC5B,MAAM,IAAI,WAAW,CAAC,CAAoC,iCAAA,EAAA,IAAI,CAA2B,wBAAA,EAAA,IAAI,CAAC,YAAY,CAAG,CAAA,CAAA,CAAC,CAAC;SAChH;AAED,QAAA,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KAC/B;AAEO,IAAA,cAAc,CAAC,IAAY,EAAA;AACjC,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE;YAC9B,MAAM,IAAI,WAAW,CAAC,CAAsC,mCAAA,EAAA,IAAI,CAAuB,oBAAA,EAAA,IAAI,CAAC,cAAc,CAAG,CAAA,CAAA,CAAC,CAAC;SAChH;AAED,QAAA,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KACjC;IAEO,gBAAgB,CAAC,UAAkB,EAAE,YAAoB,EAAA;AAC/D,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE;YAClC,MAAM,IAAI,WAAW,CACnB,CAA2C,wCAAA,EAAA,UAAU,CAAqB,kBAAA,EAAA,IAAI,CAAC,YAAY,CAAG,CAAA,CAAA,CAC/F,CAAC;SACH;AAED,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,GAAG,YAAY,GAAG,UAAU,EAAE;AAChE,YAAA,MAAM,SAAS,CAAC;SACjB;AAED,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC;AACvC,QAAA,IAAI,MAAc,CAAC;AACnB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,UAAU,CAAC,EAAE;AACpE,YAAA,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;SACjE;aAAM;YACL,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;SACrD;AACD,QAAA,IAAI,CAAC,GAAG,IAAI,YAAY,GAAG,UAAU,CAAC;AACtC,QAAA,OAAO,MAAM,CAAC;KACf;IAEO,aAAa,GAAA;QACnB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAG,CAAC;AAChC,YAAA,OAAO,KAAK,CAAC,IAAI,KAAK,aAAa,CAAC;SACrC;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,YAAY,CAAC,UAAkB,EAAE,UAAkB,EAAA;AACzD,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE;YAClC,MAAM,IAAI,WAAW,CAAC,CAAoC,iCAAA,EAAA,UAAU,CAAqB,kBAAA,EAAA,IAAI,CAAC,YAAY,CAAG,CAAA,CAAA,CAAC,CAAC;SAChH;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE;AAC/C,YAAA,MAAM,SAAS,CAAC;SACjB;AAED,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC;AACrC,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,UAAU,CAAC,CAAC;AAChE,QAAA,IAAI,CAAC,GAAG,IAAI,UAAU,GAAG,UAAU,CAAC;AACpC,QAAA,OAAO,MAAM,CAAC;KACf;IAEO,eAAe,CAAC,IAAY,EAAE,UAAkB,EAAA;AACtD,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE;YAC5B,MAAM,IAAI,WAAW,CAAC,CAAoC,iCAAA,EAAA,IAAI,CAAqB,kBAAA,EAAA,IAAI,CAAC,YAAY,CAAG,CAAA,CAAA,CAAC,CAAC;SAC1G;AAED,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC;AACzD,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,GAAG,CAAC,CAAe,CAAC;AACnE,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAChE;IAEO,MAAM,GAAA;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrC;IAEO,OAAO,GAAA;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACtC;IAEO,OAAO,GAAA;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACtC;IAEO,MAAM,GAAA;AACZ,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,EAAE,CAAC;AACX,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,MAAM,GAAA;AACZ,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,EAAE,CAAC;AACX,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,OAAO,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,OAAO,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,OAAO,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,OAAO,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,OAAO,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,OAAO,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,eAAe,GAAA;AACrB,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC/C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,eAAe,GAAA;AACrB,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,OAAO,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,OAAO,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,QAAA,OAAO,KAAK,CAAC;KACd;AACF;;AClvBe,SAAA,MAAM,CACpB,MAAwC,EACxC,OAAqD,EAAA;AAErD,IAAA,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,IAAA,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAChC,CAAC;AASe,SAAA,WAAW,CACzB,MAAwC,EACxC,OAAqD,EAAA;AAErD,IAAA,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,IAAA,OAAO,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACrC;;ACpCM,SAAU,eAAe,CAAI,MAA6B,EAAA;IAC9D,OAAQ,MAAc,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC;AACvD,CAAC;AAED,SAAS,aAAa,CAAI,KAA2B,EAAA;AACnD,IAAA,IAAI,KAAK,IAAI,IAAI,EAAE;AACjB,QAAA,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;KAC5E;AACH,CAAC;AAEM,gBAAgB,uBAAuB,CAAI,MAAyB,EAAA;AACzE,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AAElC,IAAA,IAAI;QACF,OAAO,IAAI,EAAE;YACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;YAC5C,IAAI,IAAI,EAAE;gBACR,OAAO;aACR;YACD,aAAa,CAAC,KAAK,CAAC,CAAC;AACrB,YAAA,MAAM,KAAK,CAAC;SACb;KACF;YAAS;QACR,MAAM,CAAC,WAAW,EAAE,CAAC;KACtB;AACH,CAAC;AAEK,SAAU,mBAAmB,CAAI,UAAiC,EAAA;AACtE,IAAA,IAAI,eAAe,CAAC,UAAU,CAAC,EAAE;AAC/B,QAAA,OAAO,UAAU,CAAC;KACnB;SAAM;AACL,QAAA,OAAO,uBAAuB,CAAC,UAAU,CAAC,CAAC;KAC5C;AACH;;AC/BO,eAAe,WAAW,CAC/B,UAAgE,EAChE,OAAqD,EAAA;AAErD,IAAA,MAAM,MAAM,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAC;AAC/C,IAAA,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,IAAA,OAAO,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACrC,CAAC;AAMe,SAAA,iBAAiB,CAC/B,UAAgE,EAChE,OAAqD,EAAA;AAErD,IAAA,MAAM,MAAM,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAC;AAC/C,IAAA,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,IAAA,OAAO,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAC3C,CAAC;AAMe,SAAA,iBAAiB,CAC/B,UAAgE,EAChE,OAAqD,EAAA;AAErD,IAAA,MAAM,MAAM,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAC;AAC/C,IAAA,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,IAAA,OAAO,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACtC,CAAC;AAKM,MAAM,YAAY,GAAU;;;;"}